{"version":3,"sources":["redux/actions.js","redux/reducer.js","redux/store.js","services/cityIO/cityioDefault.js","services/cityIO/cityIO.js","components/menu/RangeSlider.js","components/menu/PaperSheet.js","components/menu/menu.js","components/menu/menuContainer.js","components/baseMap/baseMapUtils.js","services/consoleStyle.js","components/baseMap/baseMap.js","components/prjMap/util.ts","components/prjMap/anchor.tsx","components/prjMap/deleteLocalStorage.js","components/prjMap/layer.tsx","components/baseMap/baseMapContainer.js","components/vis/Radar/Radar.js","components/vis/visContainer.js","App.js","index.js"],"names":["GET_CITYIO_DATA","LISTEN_TO_MAP_EVENTS","LISTEN_TO_ABM_SLIDERS","MENU_INTERACTION","listOfToggles","Object","keys","settings","menu","toggles","menuInitState","i","length","values","push","initialState","MENU","CITYIO","MAP","SLIDERS","reducer","state","action","type","data","reduxDevTools","window","__REDUX_DEVTOOLS_EXTENSION__","configureStore","createStore","CityioFail","className","href","Component","CityIO","props","handleURL","tableName","location","search","substring","setState","userEnteredCityioEndpoint","cityioURL","cityIO","baseURL","toString","getCityIOHash","timer","setInterval","interval","console","log","URL","fetch","then","response","json","result","handleCityIOHashes","catch","e","id","oldHashs","cityIOmodulesStatus","readyToShareWithRedux","cityIOmodules","forEach","module","hashes","setNestedState","getCityIOmoduleData","checkDoneCityIO","moduleName","status","sharePropsWithRedux","cityIOmodulesData","getCityioData","parent","child","holder","axios","get","error","headers","request","message","config","this","mapDispatchToProps","connect","map","layers","ABM","startSimHour","endSimHour","sliderStart","Date","getHours","sliderEnd","marks","value","label","useStyles","makeStyles","root","width","listenToSlidersEvents","ABMlayerEvents","classes","React","useState","timeValue","setTimeValue","speedValue","setSpeedValue","Typography","gutterBottom","Slider","min","max","onChange","newValue","time","valueLabelDisplay","aria-labelledby","speed","theme","padding","spacing","position","bottom","left","PaperSheet","Paper","listenToMenuUI","menuState","maxWidth","margin","paper","background","color","list","fullList","menuButton","top","editButton","createMuiTheme","palette","filter","k","String","toggleStateArray","setChecked","toggleDrawer","side","open","event","key","handleToggle","currentIndex","indexOf","newChecked","splice","checked","togglesCompsArray","thisToggle","ListItem","ListItemText","primary","ListItemSecondaryAction","Switch","edge","includes","ThemeProvider","Drawer","anchor","onClose","role","onClick","onKeyDown","List","Fab","MenuContainer","cityioData","grid","tzlookup","require","setDirLightSettings","header","hourAtLatLong","toLocaleString","timeZone","spatial","latitude","longitude","hour","hour12","getUTCHours","parseInt","_proccessGridData","types","TUIgridData","wholeGrid","meta_grid","interactiveGridData","interactive_grid_data","features","properties","interactiveMapping","interactive_grid_mapping","gridCellType","interactiveCellProps","cellValueByIndex","height","JSON","parse","stringify","_proccessGridTextData","textData","text","coordinates","geometry","_proccessAccessData","accessData","access","d","heatmap","consoleStyle","join","Map","_mulipleObjPicked","x","dim","y","deckGL","pickObjects","_handleSelection","rndType","randomType","multiSelectedObj","selected","thisCellProps","object","land_use","interactive","old_height","old_color","selectedCellsState","_renderSelectionTarget","mousePos","rc","mouseX","clientX","divSize","mouseY","clientY","style","border","backgroundColor","mouseDown","borderColor","borderRadius","zIndex","pointerEvents","fontSize","name","_rndType","Math","random","_handleKeyUp","keyDownState","_handleKeyDown","nativeEvent","draggingWhileEditing","viewState","initialViewState","animationFrame","_onViewStateChange","bind","timeZoneOffset","dirLightSettings","timestamp","UTC","intensity","_shadow","cancelAnimationFrame","_rightClickViewRotate","_setupEffects","_setViewStateToTableHeader","prevProps","prevState","_animate","gridTextData","metaGridProps","post","_prepareEditsForCityIO","zoom","pitch","bearing","rotation","ambientLight","AmbientLight","dirLight","_SunLight","lightingEffect","LightingEffect","shadowColor","_effects","animationSpeed","t","offset","date","directionalLights","getFullYear","getMonth","getDay","getMinutes","getSeconds","requestAnimationFrame","document","getElementById","addEventListener","evt","preventDefault","TextLayer","getText","getPosition","getColor","getSize","GeoJsonLayer","visible","pickable","extruded","lineWidthScale","lineWidthMinPixels","getElevation","getFillColor","undefined","onDrag","onDragStart","onDragEnd","updateTriggers","transitions","TripsLayer","getPath","path","getTimestamps","timestamps","mode","getWidth","opacity","rounded","trailLength","currentTime","PathLayer","noisePath","HeatmapLayer","colorRange","colors","radiusPixels","getWeight","housing","onKeyUp","onMouseMove","onMouseUp","onMouseDown","getCursor","ref","deck","onViewStateChange","_renderLayers","effects","controller","TouchZoomRotate","dragPan","dragRotate","asyncRender","reuseMaps","mapboxApiAccessToken","process","mapStyle","blue","preventStyleDiffing","listenToMapEvents","solve","transformPointsToMatrix","sourcePoints","targetPoints","a","b","n","fromX","fromY","toX","toY","h","num","precision","factor","pow","tempNumber","round","matrixToTransform","matrix","vectorToTransform","vector","styles","container","cursor","anchorSize","right","AnchorComponent","translation","onMouseEnter","transform","button","DeleteLocalStorage","Grid","alignItems","justify","Button","variant","startIcon","anchors","defaultMatrix","_setDeltaVal","deltaInitVals","Layer","layerTranslateDelta","anchorTranslateDelta","isAnchorDragging","anchorMoving","translateDelta","transformOrigin","containerTranslate","onAnchorMouseDown","stopPropagation","pageX","pageY","onAnchorMouseMove","vectorIndexToModify","deltaX","deltaY","onAnchorMouseUp","isEditMode","newVector","_clearLocalStraoge","localStorage","getItem","removeItem","reload","getBoundingClientRect","ls","setItem","removeEventListener","anchorStyle","anchorClassName","display","children","index","MapContainer","_checkKeystone","Radar","domain","radar","radarData","radarSize","dataStatic","generateData","animation","domains","polygons","fillOpacity","strokeWidth","axes","fontWeight","fill","labels","textAnchor","stroke","tickValues","Array","v","VisContainer","store","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.13b2de48.chunk.js","sourcesContent":["/**\n * ACTIONS\n */\nexport const GET_CITYIO_DATA = \"GET_CITYIO_DATA\";\nexport function getCityioData(data) {\n    return { type: GET_CITYIO_DATA, data };\n}\n\nexport const LISTEN_TO_MAP_EVENTS = \"LISTEN_TO_MAP_EVENTS\";\nexport function listenToMapEvents(data) {\n    return { type: LISTEN_TO_MAP_EVENTS, data };\n}\n\nexport const LISTEN_TO_ABM_SLIDERS = \"LISTEN_TO_ABM_SLIDERS\";\nexport function listenToSlidersEvents(data) {\n    return { type: LISTEN_TO_ABM_SLIDERS, data };\n}\n\nexport const MENU_INTERACTION = \"MENU_INTERACTION\";\n\nexport function listenToMenuUI(data) {\n    return { type: MENU_INTERACTION, data };\n}\n","import settings from \"../settings/settings.json\";\n\nimport {\n    GET_CITYIO_DATA,\n    MENU_INTERACTION,\n    LISTEN_TO_MAP_EVENTS,\n    LISTEN_TO_ABM_SLIDERS\n} from \"./actions\";\n\n/**\n * INIT STATE\n */\nconst listOfToggles = Object.keys(settings.menu.toggles);\nlet menuInitState = [];\nfor (let i = 0; i < listOfToggles.length; i++) {\n    if (Object.values(settings.menu.toggles)[i]) {\n        menuInitState.push(listOfToggles[i]);\n    }\n}\nconst initialState = {\n    MENU: menuInitState,\n    CITYIO: {},\n    MAP: {},\n    SLIDERS: {}\n};\n\n/**\n * REDUCER\n */\nexport default function reducer(state = initialState, action) {\n    switch (action.type) {\n        case GET_CITYIO_DATA:\n            return { ...state, CITYIO: action.data };\n        case MENU_INTERACTION:\n            return { ...state, MENU: action.data };\n        case LISTEN_TO_MAP_EVENTS:\n            return { ...state, MAP: action.data };\n        case LISTEN_TO_ABM_SLIDERS:\n            return { ...state, SLIDERS: action.data };\n        default:\n            return state;\n    }\n}\n","import { createStore } from \"redux\";\nimport reducer from \"./reducer\";\n\nconst reduxDevTools =\n    window.__REDUX_DEVTOOLS_EXTENSION__ &&\n    window.__REDUX_DEVTOOLS_EXTENSION__();\n\nconst configureStore = () => {\n    const store = createStore(reducer, reduxDevTools);\n\n    if (process.env.NODE_ENV !== \"production\") {\n        if (module.hot) {\n            module.hot.accept(\"./reducer\", () => {\n                store.replaceReducer(reducer);\n            });\n        }\n    }\n\n    return store;\n};\n\nexport default configureStore;\n","import React, { Component } from \"react\";\nimport \"./cityioDefault.css\";\n\nclass CityioFail extends Component {\n    render() {\n        return (\n            <div className=\"background\">\n                <div className=\"info shadow\">\n                    <h1>CityScopeJS</h1>\n                    CityScopeJS is a unified front-end for the{\" \"}\n                    <a href=\"https://cityscope.media.mit.edu/\">\n                        MIT CityScope\n                    </a>{\" \"}\n                    project, an{\" \"}\n                    <a href=\"https://github.com/CityScope/CS_cityscopeJS\">\n                        open-source\n                    </a>{\" \"}\n                    urban modeling and simulation platform. Start by adding\n                    CityScope table name to the URL{\" \"}\n                    <small>\n                        [for example{\" \"}\n                        <a href=\"https://cityscope.media.mit.edu/CS_cityscopeJS/?grasbrook\">\n                            CityScopeJS Grasbrook\n                        </a>\n                        ]\n                    </small>{\" \"}\n                    or click <a href=\"https://cityio.media.mit.edu\"> here</a>{\" \"}\n                    for a list of active CityScope tables. <br />\n                    <br />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default CityioFail;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { getCityioData } from \"../../redux/actions\";\nimport settings from \"../../settings/settings.json\";\nimport CityioFail from \"./cityioDefault\";\n\nclass CityIO extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            oldHashs: {},\n            userEnteredCityioEndpoint: false,\n            cityIOmodulesData: {}\n        };\n        this.cityioURL = null;\n    }\n\n    /**\n     * start fetching API hashes to check for new data\n     */\n    componentDidMount() {\n        this.handleURL();\n    }\n\n    handleURL = () => {\n        this.tableName = window.location.search.substring(1);\n        if (this.tableName !== \"\") {\n            this.setState({ userEnteredCityioEndpoint: true });\n            this.cityioURL =\n                settings.cityIO.baseURL + this.tableName.toString();\n            // get the hashes first\n            this.getCityIOHash(this.cityioURL + \"/meta\");\n            // and every interval\n            this.timer = setInterval(\n                () => this.getCityIOHash(this.cityioURL + \"/meta\"),\n                settings.cityIO.interval\n            );\n            console.log(\n                \"starting cityIO interval every..\",\n                settings.cityIO.interval\n            );\n        } else {\n            // no URL provided\n            this.setState({ userEnteredCityioEndpoint: false });\n        }\n    };\n\n    /**\n     * returns only the hasees from API\n     */\n    getCityIOHash = URL => {\n        fetch(URL)\n            .then(response => response.json())\n            .then(result => {\n                this.handleCityIOHashes(result);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    };\n\n    /**\n     * check for updated hashes.\n     * if new hashes exist,\n     * fetch !! WHOLE API (for now)\n     */\n    handleCityIOHashes = result => {\n        // if master hash ID has changed (cityIO table state)\n        if (result.id !== this.state.oldHashs.id) {\n            // reset the cityIOmodulesStatus\n            this.setState({ cityIOmodulesStatus: {} });\n\n            // reset the state of this flag\n            this.setState({ readyToShareWithRedux: false });\n\n            // new data in table, get all modules\n            // that are listed in settings\n            settings.cityIO.cityIOmodules.forEach(module => {\n                // only update modules that have new data\n                if (result.hashes[module] !== this.state.oldHashs[module]) {\n                    // set this module as not ready\n                    this.setNestedState(\"cityIOmodulesStatus\", module, false);\n                    // get the module data from cityIO\n                    this.getCityIOmoduleData(\n                        module,\n                        this.cityioURL + \"/\" + module\n                    );\n                    // update this new module hash in state\n                    this.setNestedState(\n                        \"oldHashs\",\n                        module,\n                        result.hashes[module]\n                    );\n                } else {\n                    // update module name with ok\n                    this.setNestedState(\"cityIOmodulesStatus\", module, true);\n                }\n            });\n            // finally, put to state the hashes master id\n            this.setNestedState(\"oldHashs\", \"id\", result.id);\n        }\n    };\n\n    checkDoneCityIO = moduleName => {\n        this.setNestedState(\"cityIOmodulesStatus\", moduleName, true);\n\n        // check if all modules are done\n        for (const status in this.state.cityIOmodulesStatus) {\n            if (this.state.cityIOmodulesStatus[status] !== true) {\n                // we still need to update some module, stop\n                return;\n            }\n        }\n        //  if so, change the state of 'readyToShareWithRedux'\n        this.setState({ readyToShareWithRedux: true });\n    };\n\n    sharePropsWithRedux = () => {\n        if (this.state.readyToShareWithRedux) {\n            const data = this.state.cityIOmodulesData;\n            data.tableName = this.tableName;\n            console.log(\"done updating from cityIO..\");\n            // finally, send data to redux\n            this.props.getCityioData(data);\n        }\n    };\n\n    setNestedState = (parent, child, data) => {\n        var holder = { ...this.state[parent] };\n        holder[child] = data;\n        this.setState({ [parent]: holder });\n    };\n\n    getCityIOmoduleData = (moduleName, URL) => {\n        axios\n            .get(URL)\n            .then(response => {\n                // put response to state obj\n                this.setNestedState(\n                    \"cityIOmodulesData\",\n                    moduleName,\n                    response.data\n                );\n                console.log(\"...updating module:\", moduleName);\n                this.checkDoneCityIO(moduleName);\n            })\n\n            .catch(error => {\n                if (error.response) {\n                    console.log(\n                        \"error.response:\",\n                        \"\\n\",\n                        error.response.data,\n                        \"\\n\",\n                        error.response.status,\n                        \"\\n\",\n                        error.response.headers\n                    );\n                } else if (error.request) {\n                    console.log(\"error.request:\", error.request);\n                } else {\n                    console.log(\"misc error:\", error.message);\n                }\n                console.log(\"request config:\", error.config);\n            });\n    };\n\n    render() {\n        if (this.state.userEnteredCityioEndpoint === false) {\n            return <CityioFail />;\n        } else {\n            this.sharePropsWithRedux();\n            return null;\n        }\n    }\n}\n\nconst mapDispatchToProps = {\n    getCityioData: getCityioData\n};\n\nexport default connect(null, mapDispatchToProps)(CityIO);\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Slider from \"@material-ui/core/Slider\";\nimport settings from \"../../settings/settings.json\";\nimport { connect } from \"react-redux\";\nimport { listenToSlidersEvents } from \"../../redux/actions\";\n\nconst sixAm = 6 * 3600;\nconst { startSimHour, endSimHour } = settings.map.layers.ABM;\nconst sliderStart = new Date((sixAm + startSimHour) * 1000).getHours();\nconst sliderEnd = new Date((sixAm + endSimHour) * 1000).getHours();\n\nconst marks = [\n    {\n        value: 0,\n        label: \"12AM\"\n    },\n    {\n        value: 6,\n        label: \"6AM\"\n    },\n    {\n        value: 12,\n        label: \"12PM\"\n    },\n    {\n        value: 18,\n        label: \"6PM\"\n    }\n];\n\nconst useStyles = makeStyles({\n    root: {\n        width: \"100%\"\n    }\n});\n\nfunction RangeSlider(props) {\n    const classes = useStyles();\n    const [timeValue, setTimeValue] = React.useState([\n        sliderStart,\n        12,\n        sliderEnd\n    ]);\n\n    const [speedValue, setSpeedValue] = React.useState([50]);\n\n    const handleSetTimeValue = (e, newValue) => {\n        setTimeValue(newValue);\n        // ! not working\n        props.listenToSlidersEvents({\n            ...props,\n            SLIDERS: {\n                ...props,\n                time: newValue\n            }\n        });\n    };\n\n    const handleSetSpeedValue = (e, newValue) => {\n        setSpeedValue(newValue);\n        // ! not working\n        props.listenToSlidersEvents({\n            ...props,\n            SLIDERS: {\n                ...props,\n                speed: newValue\n            }\n        });\n    };\n\n    return (\n        <div className={classes.root}>\n            <Typography id=\"range-slider\" gutterBottom>\n                Simulation Range\n            </Typography>\n            <Slider\n                min={0}\n                max={23}\n                marks={marks}\n                value={timeValue}\n                onChange={handleSetTimeValue}\n                valueLabelDisplay=\"auto\"\n                aria-labelledby=\"range-slider\"\n            />\n            <Typography id=\"range-slider\" gutterBottom>\n                Simulation Speed\n            </Typography>\n            <Slider\n                min={0}\n                max={100}\n                value={speedValue}\n                onChange={handleSetSpeedValue}\n                valueLabelDisplay=\"auto\"\n                aria-labelledby=\"range-slider\"\n            />\n        </div>\n    );\n}\n\nconst mapStateToProps = state => {\n    return {\n        ABMlayerEvents: state.MAP\n    };\n};\n\nconst mapDispatchToProps = {\n    listenToSlidersEvents: listenToSlidersEvents\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RangeSlider);\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport RangeSlider from \"./RangeSlider\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        padding: theme.spacing(1, 5),\n        position: \"fixed\",\n        bottom: \"3vw\",\n        left: \"3vw\",\n        width: \"20vw\"\n    }\n}));\n\nexport default function PaperSheet() {\n    const classes = useStyles();\n\n    return (\n        <Paper className={classes.root}>\n            <RangeSlider />\n        </Paper>\n    );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport { createMuiTheme } from \"@material-ui/core\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Fab from \"@material-ui/core/Fab\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\n\nimport { connect } from \"react-redux\";\nimport { listenToMenuUI } from \"../../redux/actions\";\nimport settings from \"../../settings/settings.json\";\nimport PaperSheet from \"./PaperSheet\";\nimport { ThemeProvider } from \"@material-ui/styles\";\n\n// import CircularProgress from \"@material-ui/core/CircularProgress\";\n\nfunction Menu(props) {\n    const listOfToggles = Object.keys(settings.menu.toggles);\n    const useStyles = makeStyles(theme => ({\n        root: {\n            width: \"100%\",\n            maxWidth: \"15em\",\n            position: \"absolute\",\n            \"& > *\": {\n                margin: theme.spacing(1)\n            }\n        },\n        paper: {\n            background: \"black\",\n            color: \"white\"\n        },\n        list: {\n            width: \"15em\"\n        },\n        fullList: {\n            width: \"auto\"\n        },\n\n        menuButton: {\n            position: \"fixed\",\n            top: theme.spacing(2),\n            left: theme.spacing(2)\n        },\n        editButton: {\n            position: \"fixed\",\n            top: theme.spacing(10),\n            left: theme.spacing(2)\n        }\n    }));\n\n    const classes = useStyles();\n    const theme = createMuiTheme({\n        palette: {\n            type: \"dark\"\n        }\n    });\n    const [toggleStateArray, setChecked] = React.useState(\n        Object.keys(settings.menu.toggles)\n            .filter(function(k) {\n                return settings.menu.toggles[k];\n            })\n            .map(String)\n    );\n\n    const [state, setState] = React.useState({\n        left: false\n    });\n\n    const toggleDrawer = (side, open) => event => {\n        if (\n            event.type === \"keydown\" &&\n            (event.key === \"Tab\" || event.key === \"Shift\")\n        ) {\n            return;\n        }\n\n        setState({ ...state, [side]: open });\n    };\n\n    const sideList = side => (\n        <div\n            className={classes.list}\n            role=\"presentation\"\n            onClick={toggleDrawer(side, false)}\n            onKeyDown={toggleDrawer(side, false)}\n        ></div>\n    );\n    const handleToggle = value => () => {\n        const currentIndex = toggleStateArray.indexOf(value);\n        const newChecked = [...toggleStateArray];\n        if (currentIndex === -1) {\n            newChecked.push(value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n        setChecked(newChecked);\n        setState({ ...state, checked: newChecked });\n\n        props.listenToMenuUI(newChecked);\n    };\n\n    let togglesCompsArray = [];\n    for (let i = 0; i < listOfToggles.length; i++) {\n        const thisToggle = (\n            <ListItem key={listOfToggles[i]}>\n                {/* <CircularProgress size={20} thickness={5} /> */}\n\n                <ListItemText primary={listOfToggles[i]} />\n                <ListItemSecondaryAction>\n                    <Switch\n                        /**\n                         * gets props with initial menu state\n                         * and turn on the layer on init\n                         */\n                        edge=\"end\"\n                        onChange={handleToggle(listOfToggles[i])}\n                        checked={\n                            props.menuState.includes(listOfToggles[i])\n                                ? true\n                                : false\n                        }\n                    />\n                </ListItemSecondaryAction>\n            </ListItem>\n        );\n        togglesCompsArray.push(thisToggle);\n    }\n\n    const renderABMslider = () => {\n        if (state.checked && state.checked.includes(\"ABM\")) {\n            return <PaperSheet />;\n        } else return null;\n    };\n\n    return (\n        <ThemeProvider theme={theme}>\n            <div className={classes.root}>\n                <Drawer\n                    anchor=\"left\"\n                    open={state.left}\n                    onClose={toggleDrawer(\"left\", false)}\n                >\n                    {sideList(\"left\")}\n                    <List className={classes.root}>\n                        <h2>cityscopeJS</h2>\n                        {togglesCompsArray}\n                    </List>\n                </Drawer>\n            </div>\n            <Fab\n                className={classes.menuButton}\n                onClick={toggleDrawer(\"left\", true)}\n            >\n                <MenuIcon />\n            </Fab>\n            <Fab className={classes.editButton} onClick={handleToggle(\"EDIT\")}>\n                {toggleStateArray.includes(\"EDIT\") ? (\n                    <CancelIcon />\n                ) : (\n                    <EditIcon />\n                )}\n            </Fab>\n            {renderABMslider()}\n        </ThemeProvider>\n    );\n}\n\nconst mapStateToProps = state => {\n    return {\n        menuState: state.MENU\n    };\n};\n\nconst mapDispatchToProps = {\n    listenToMenuUI: listenToMenuUI\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Menu);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Menu from \"./menu\";\n\nclass MenuContainer extends Component {\n    render() {\n        if (this.props.cityioData && this.props.cityioData.grid) {\n            return <Menu />;\n        } else {\n            return null;\n        }\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        cityioData: state.CITYIO\n    };\n};\n\nexport default connect(mapStateToProps, null)(MenuContainer);\n","import settings from \"../../settings/settings.json\";\nimport axios from \"axios\";\nvar tzlookup = require(\"tz-lookup\");\n\n/**\n * returns time for table location\n * for the light emlement\n * @param {*} header\n */\n\nexport const setDirLightSettings = header => {\n    // get the hour element of this location\n    let hourAtLatLong = new Date().toLocaleString(\"en-US\", {\n        timeZone: tzlookup(header.spatial.latitude, header.spatial.longitude),\n        hour: \"2-digit\",\n        hour12: false\n    });\n\n    // get the time in greenwich\n    var greenwichDate = new Date();\n    var greenwichHours = greenwichDate.getUTCHours();\n    // calc the offset\n    let timeZoneOffset = greenwichHours + 24 - parseInt(hourAtLatLong);\n    return timeZoneOffset;\n};\n\n/**\n * Description. gets `props` with geojson\n * and procces the interactive area\n */\nexport const _proccessGridData = cityioData => {\n    let types = settings.map.types;\n    const TUIgridData = cityioData.grid;\n\n    const wholeGrid = cityioData.meta_grid;\n    const interactiveGridData = cityioData.interactive_grid_data;\n    // update meta_grid features from cityio\n    if (interactiveGridData) {\n        for (let i = 0; i < wholeGrid.features.length; i++) {\n            wholeGrid.features[i].properties = interactiveGridData[i];\n        }\n    }\n\n    // handles TUI grid data on update\n    const interactiveMapping = cityioData.interactive_grid_mapping;\n    for (let i in interactiveMapping) {\n        // type is the first value in the cell array\n        // the rotation is the 2nd\n        let gridCellType = TUIgridData[i][0];\n        let interactiveCellProps =\n            wholeGrid.features[interactiveMapping[i]].properties;\n        // set up the cell type\n        interactiveCellProps.type = gridCellType;\n\n        // check if not undefined type (no scanning)\n\n        if (TUIgridData[i][0] !== -1) {\n            // get value of cell from settings via its index\n            let cellValueByIndex = Object.values(types)[TUIgridData[i][0]];\n            // cast the cell color\n            interactiveCellProps.color = cellValueByIndex.color;\n            // cast the cell height\n            interactiveCellProps.height = cellValueByIndex.height;\n        } else {\n            console.log(\"... got null type...\");\n        }\n    }\n    const newGrid = JSON.parse(JSON.stringify(wholeGrid));\n    return newGrid;\n};\n\n/**\n * Data format:\n * [\n *   {text: 'type', coordinates: [-122.466233, 37.684638]},\n *   ...\n * ]\n *\n * Grid data format:\n * features[i].geometry.coordinates[0][0]\n */\nexport const _proccessGridTextData = data => {\n    const meta_grid = data.meta_grid;\n    let textData = [];\n    for (let i = 0; i < meta_grid.features.length; i++) {\n        textData[i] = {\n            text: meta_grid.features[i].properties.height.toString(),\n            coordinates: [\n                meta_grid.features[i].geometry.coordinates[0][0][0],\n                meta_grid.features[i].geometry.coordinates[0][0][1],\n                meta_grid.features[i].properties.height + 10\n            ]\n        };\n    }\n    return textData;\n};\n\n/**\n * Description. gets `props` with geojson\n * and procces the access layer data\n */\nexport const _proccessAccessData = data => {\n    const accessData = data.access;\n    // get colors from settings\n    let coordinates = accessData.features.map(d => d.geometry.coordinates);\n    let values = accessData.features.map(d => d.properties);\n    let heatmap = [];\n    for (let i = 0; i < coordinates.length; i++) {\n        heatmap.push({\n            coordinates: coordinates[i],\n            values: values[i]\n        });\n    }\n    return heatmap;\n};\n\n/**\n * checks if edits are done (toggled off)\n * than returns a redux state\n * with grid edits payload\n */\nexport const _prepareEditsForCityIO = (meta_grid, tableName) => {\n    let metaGridProps = [];\n    for (let i = 0; i < meta_grid.features.length; i++) {\n        metaGridProps[i] = meta_grid.features[i].properties;\n    }\n\n    axios\n        .post(\n            \"https://cityio.media.mit.edu/api/table/update/\" +\n                tableName +\n                \"/interactive_grid_data\",\n            metaGridProps\n        )\n        .then(response => {\n            console.log(response);\n        })\n        .catch(error => {\n            console.log(error);\n        });\n};\n","export const consoleStyle = [\n    \"background: linear-gradient(#10B500, #0086B5)\",\n    \"border: 3px solid #ffffff\",\n    \"color: white\",\n    \"display: block\",\n    \"text-shadow: 0 1px 0 rgba(0, 0, 0, 0.5)\",\n    \"line-height: 40px\",\n    \"text-align: center\",\n    \"font-weight: bold\"\n].join(\";\");\n","/* global window */\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { listenToMapEvents } from \"../../redux/actions\";\nimport {\n    _proccessAccessData,\n    _proccessGridData,\n    _prepareEditsForCityIO,\n    _proccessGridTextData,\n    setDirLightSettings\n} from \"./baseMapUtils\";\nimport { StaticMap } from \"react-map-gl\";\nimport DeckGL from \"@deck.gl/react\";\nimport { TripsLayer } from \"@deck.gl/geo-layers\";\nimport \"mapbox-gl/dist/mapbox-gl.css\";\nimport { HeatmapLayer, PathLayer, GeoJsonLayer, TextLayer } from \"deck.gl\";\nimport { LightingEffect, AmbientLight, _SunLight } from \"@deck.gl/core\";\nimport settings from \"../../settings/settings.json\";\nimport { consoleStyle } from \"../../services/consoleStyle\";\nclass Map extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            menu: null,\n            cityioData: null,\n            draggingWhileEditing: false,\n            selectedCellsState: null,\n            time: 0,\n            viewState: settings.map.initialViewState\n        };\n        this.animationFrame = null;\n        this._onViewStateChange = this._onViewStateChange.bind(this);\n        this.timeZoneOffset = setDirLightSettings(this.props.cityioData.header);\n        this.dirLightSettings = {\n            timestamp: Date.UTC(2019, 7, 1, 11 + this.timeZoneOffset),\n            color: [255, 255, 255],\n            intensity: 1.0,\n            _shadow: true\n        };\n    }\n\n    componentWillUnmount() {\n        if (this.animationFrame) {\n            window.cancelAnimationFrame(this.animationFrame);\n        }\n    }\n\n    componentDidMount() {\n        // fix deck view rotate\n        this._rightClickViewRotate();\n        // setup sun effects\n        this._setupEffects();\n        // zoom map on CS table location\n        this._setViewStateToTableHeader();\n    }\n\n    /**\n     * handels events as they derived from redux props\n     */\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.menu !== prevState.menu) {\n            this.setState({ menu: this.props.menu });\n            // start ainmation/sim/roate\n            this._animate();\n        }\n        if (prevState.cityioData !== this.props.cityioData) {\n            console.log(\"%c new cityioData data to render \", consoleStyle);\n            // get cityio data from props\n            const cityioData = this.props.cityioData;\n            this.setState({\n                cityioData: cityioData,\n                meta_grid: _proccessGridData(cityioData),\n                gridTextData: _proccessGridTextData(cityioData)\n            });\n\n            // ! workaround for preloading access layer data\n            if (this.props.cityioData.access) {\n                this.setState({ access: _proccessAccessData(cityioData) });\n            }\n\n            // FOR NOW FAKE TYPE\n            this._rndType();\n        }\n\n        /**\n         * finised edit\n         * ! should have dedicated UI\n         */\n        if (\n            prevProps.menu.includes(\"EDIT\") &&\n            !this.props.menu.includes(\"EDIT\")\n        ) {\n            _prepareEditsForCityIO(\n                this.state.meta_grid,\n                this.props.cityioData.tableName\n            );\n        }\n    }\n\n    _onViewStateChange({ viewState }) {\n        this.setState({ viewState });\n    }\n\n    /**\n     * resets the camera viewport\n     * to cityIO header data\n     * https://github.com/uber/deck.gl/blob/master/test/apps/viewport-transitions-flyTo/src/app.js\n     */\n    _setViewStateToTableHeader() {\n        const header = this.props.cityioData.header;\n        this.setState({\n            viewState: {\n                ...this.state.viewState,\n                longitude: header.spatial.longitude,\n                latitude: header.spatial.latitude,\n                zoom: 14,\n                pitch: 0,\n                bearing: 180 - header.spatial.rotation\n            }\n        });\n    }\n\n    _setupEffects() {\n        const ambientLight = new AmbientLight({\n            color: [255, 255, 255],\n            intensity: 0.85\n        });\n        const dirLight = new _SunLight(this.dirLightSettings);\n        const lightingEffect = new LightingEffect({ ambientLight, dirLight });\n        lightingEffect.shadowColor = [0, 0, 0, 0.5];\n        this._effects = [lightingEffect];\n    }\n\n    _animate() {\n        /**\n         * remove the binded animation when comp updates\n         */\n        window.cancelAnimationFrame(this.animationFrame);\n\n        if (this.props.menu.includes(\"ABM\")) {\n            const {\n                startSimHour,\n                animationSpeed,\n                endSimHour\n            } = settings.map.layers.ABM;\n\n            let t = this.state.time + animationSpeed;\n            if (\n                this.state.time > endSimHour ||\n                this.state.time < startSimHour\n            ) {\n                t = startSimHour;\n            }\n\n            let offset = this.timeZoneOffset * 3600;\n            var date = new Date(\n                (startSimHour + offset + this.state.time) * 1000\n            );\n            this._effects[0].directionalLights[0].timestamp = Date.UTC(\n                date.getFullYear(),\n                date.getMonth(),\n                date.getDay(),\n                date.getHours(),\n                date.getMinutes(),\n                date.getSeconds()\n            );\n\n            this.setState({ time: t });\n        }\n        if (this.props.menu.includes(\"ROTATE\")) {\n            let bearing = this.state.viewState.bearing\n                ? this.state.viewState.bearing\n                : 0;\n            bearing < 360 ? (bearing += 0.05) : (bearing = 0);\n\n            this.setState({\n                viewState: {\n                    ...this.state.viewState,\n                    bearing: bearing\n                }\n            });\n        }\n\n        this.animationFrame = window.requestAnimationFrame(\n            this._animate.bind(this)\n        );\n\n        // stop animation on state\n        if (!this.props.menu.includes(\"ABM\")) {\n            // && this.animationFrame\n            this._effects[0].directionalLights[0].timestamp = this.dirLightSettings.timestamp;\n            return;\n        }\n    }\n\n    /**\n     * Description. fix deck issue\n     * with rotate right botton\n     */\n    _rightClickViewRotate() {\n        document\n            .getElementById(\"deckgl-wrapper\")\n            .addEventListener(\"contextmenu\", evt => evt.preventDefault());\n    }\n\n    /**\n     * Description. uses deck api to\n     * collect objects in a region\n     * @argument{object} e  picking event\n     */\n    _mulipleObjPicked = e => {\n        const dim = 10;\n        const x = e.x - dim / 2;\n        const y = e.y - dim / 2;\n        let mulipleObj = this.deckGL.pickObjects({\n            x: x,\n            y: y,\n            width: dim,\n            height: dim\n        });\n        return mulipleObj;\n    };\n\n    /**\n     * Description. allow only to pick cells that are\n     *  not of CityScope TUI & that are interactable\n     * so to not overlap TUI activity\n     */\n    _handleSelection = e => {\n        let rndType = this.state.randomType;\n        const multiSelectedObj = this._mulipleObjPicked(e);\n\n        multiSelectedObj.forEach(selected => {\n            const thisCellProps = selected.object.properties;\n            if (\n                thisCellProps.land_use !== \"None\" &&\n                !thisCellProps.interactive\n            ) {\n                thisCellProps.old_height = thisCellProps.height;\n                thisCellProps.old_color = thisCellProps.color;\n                thisCellProps.color = rndType.color;\n                thisCellProps.height = rndType.height;\n            }\n        });\n\n        this.setState({\n            selectedCellsState: multiSelectedObj\n        });\n    };\n\n    /**\n     * Description.\n     * draw target area around mouse\n     */\n    _renderSelectionTarget = () => {\n        if (this.props.menu.includes(\"EDIT\") && this.state.mousePos) {\n            const rc = this.state.randomType.color;\n            const color = \"rgb(\" + rc[0] + \",\" + rc[1] + \",\" + rc[2] + \")\";\n            const mousePos = this.state.mousePos;\n            const divSize = 30;\n\n            let mouseX = mousePos.clientX - divSize / 2;\n            let mouseY = mousePos.clientY - divSize / 2;\n\n            return (\n                <div\n                    style={{\n                        border: \"2px solid\",\n                        backgroundColor: this.state.mouseDown\n                            ? \"rgba(\" +\n                              rc[0] +\n                              \",\" +\n                              rc[1] +\n                              \",\" +\n                              rc[2] +\n                              \",0.6)\"\n                            : \"rgba(0,0,0,0)\",\n                        borderColor: color,\n                        color: color,\n                        borderRadius: \"15%\",\n                        position: \"fixed\",\n                        zIndex: 1,\n                        pointerEvents: \"none\",\n                        width: divSize,\n                        height: divSize,\n                        left: mouseX,\n                        top: mouseY\n                    }}\n                >\n                    <div\n                        style={{\n                            position: \"relative\",\n                            left: divSize + 10,\n                            fontSize: \"1vw\"\n                        }}\n                    >\n                        {this.state.randomType.name}\n                    </div>\n                </div>\n            );\n        }\n    };\n\n    /**\n     * Description.\n     * Temp def. for color selection\n     */\n    _rndType = () => {\n        var keys = Object.keys(settings.map.types);\n        let randomType =\n            settings.map.types[keys[(keys.length * Math.random()) << 0]];\n        this.setState({ randomType: randomType });\n    };\n\n    _handleKeyUp = () => {\n        this.setState({ keyDownState: null });\n    };\n\n    _handleKeyDown = e => {\n        this.setState({ keyDownState: e.nativeEvent.key });\n        // compute rnd color for now\n        if (e.nativeEvent.key === \" \") {\n            this._rndType();\n        }\n    };\n\n    /**\n     * renders deck gl layers\n     */\n    _renderLayers() {\n        const cityioData = this.props.cityioData;\n        let layers = [];\n\n        if (this.props.menu.includes(\"TEXT\")) {\n            layers.push(\n                new TextLayer({\n                    id: \"gridText-layer\",\n                    data: this.state.gridTextData,\n                    getText: d => d.text,\n                    getPosition: d => d.coordinates,\n                    getColor: [255, 255, 255],\n                    getSize: 16\n                })\n            );\n        }\n        if (this.props.menu.includes(\"GRID\")) {\n            layers.push(\n                new GeoJsonLayer({\n                    id: \"GRID\",\n                    data: this.state.meta_grid,\n                    visible: this.props.menu.includes(\"GRID\") ? true : false,\n                    pickable: true,\n                    extruded: true,\n                    lineWidthScale: 1,\n                    lineWidthMinPixels: 2,\n                    getElevation: d =>\n                        d.properties.land_use !== \"None\"\n                            ? d.properties.height\n                            : 0,\n                    getFillColor: d =>\n                        d.properties.type !== undefined\n                            ? d.properties.color\n                            : d.properties.color\n                            ? d.properties.color\n                            : d.properties.land_use !== \"None\"\n                            ? settings.map.types[1].color\n                            : settings.map.types[0].color,\n                    onClick: event => {\n                        if (\n                            this.props.menu.includes(\"EDIT\") &&\n                            this.state.keyDownState !== \"Shift\"\n                        )\n                            this._handleSelection(event);\n                    },\n                    onDrag: event => {\n                        if (\n                            this.props.menu.includes(\"EDIT\") &&\n                            this.state.keyDownState !== \"Shift\"\n                        )\n                            this._handleSelection(event);\n                    },\n                    onDragStart: () => {\n                        if (\n                            this.props.menu.includes(\"EDIT\") &&\n                            this.state.keyDownState !== \"Shift\"\n                        ) {\n                            this.setState({ draggingWhileEditing: true });\n                        }\n                    },\n\n                    onDragEnd: () => {\n                        this.setState({ draggingWhileEditing: false });\n                    },\n\n                    // onHover: e => {\n                    //     if (e.object && e.object.properties) {\n                    //         this.props.listenToMapEvents({\n                    //             cellInfo: e.object.properties\n                    //         });\n                    //     }\n                    // },\n                    updateTriggers: {\n                        getFillColor: this.state.selectedCellsState,\n                        getElevation: this.state.selectedCellsState\n                    },\n                    transitions: {\n                        getFillColor: 500,\n\n                        getElevation: 500\n                    }\n                })\n            );\n        }\n\n        if (this.props.menu.includes(\"ABM\")) {\n            layers.push(\n                new TripsLayer({\n                    id: \"ABM\",\n                    visible: this.props.menu.includes(\"ABM\") ? true : false,\n                    data: cityioData.ABM,\n                    // getPath: d => d.path,\n                    getPath: d => {\n                        for (let i in d.path) {\n                            d.path[i][2] = 20;\n                        }\n                        return d.path;\n                    },\n\n                    getTimestamps: d => d.timestamps,\n                    getColor: d => {\n                        //switch between modes or types of users\n                        switch (d.mode[1]) {\n                            case 0:\n                                return [255, 0, 0];\n                            case 1:\n                                return [0, 0, 255];\n                            case 2:\n                                return [0, 255, 0];\n                            default:\n                                return [0, 0, 0];\n                        }\n                    },\n                    getWidth: 2,\n                    opacity: 0.8,\n                    rounded: true,\n                    trailLength: 500,\n                    currentTime: this.state.time\n                })\n            );\n        }\n\n        if (this.props.menu.includes(\"PATHS\")) {\n            layers.push(\n                new PathLayer({\n                    id: \"PATHS\",\n                    visible: this.props.menu.includes(\"PATHS\") ? true : false,\n                    _shadow: false,\n                    data: cityioData.ABM,\n                    getPath: d => {\n                        const noisePath =\n                            Math.random() < 0.5\n                                ? Math.random() * 0.00005\n                                : Math.random() * -0.00005;\n                        for (let i in d.path) {\n                            d.path[i][0] = d.path[i][0] + noisePath;\n                            d.path[i][1] = d.path[i][1] + noisePath;\n                            d.path[i][2] = 10;\n                        }\n                        return d.path;\n                    },\n                    getColor: d => {\n                        switch (d.mode[1]) {\n                            case 0:\n                                return [255, 0, 0];\n                            case 1:\n                                return [0, 0, 255];\n                            case 2:\n                                return [0, 255, 0];\n                            default:\n                                return [0, 0, 0];\n                        }\n                    },\n                    opacity: 0.2,\n                    getWidth: 1\n                })\n            );\n        }\n\n        if (this.props.menu.includes(\"ACCESS\")) {\n            layers.push(\n                new HeatmapLayer({\n                    id: \"ACCESS\",\n                    visible: this.props.menu.includes(\"ACCESS\") ? true : false,\n                    colorRange: settings.map.layers.heatmap.colors,\n                    radiusPixels: 200,\n                    opacity: 0.25,\n                    data: this.state.access,\n                    getPosition: d => d.coordinates,\n                    getWeight: d => d.values.housing\n                })\n            );\n        }\n        return layers;\n    }\n\n    render() {\n        return (\n            <div\n                onKeyDown={this._handleKeyDown}\n                onKeyUp={this._handleKeyUp}\n                onMouseMove={e =>\n                    this.setState({\n                        mousePos: e.nativeEvent\n                    })\n                }\n                onMouseUp={() =>\n                    this.setState({\n                        mouseDown: false\n                    })\n                }\n                onMouseDown={() =>\n                    this.setState({\n                        mouseDown: true\n                    })\n                }\n            >\n                {/* renders the slection box div */}\n                <div>{this._renderSelectionTarget()}</div>\n\n                <DeckGL\n                    // sets the cursor on paint\n                    getCursor={() =>\n                        this.props.menu.includes(\"EDIT\") ? \"none\" : \"all-scroll\"\n                    }\n                    ref={ref => {\n                        // save a reference to the Deck instance\n                        this.deckGL = ref && ref.deck;\n                    }}\n                    viewState={this.state.viewState}\n                    onViewStateChange={this._onViewStateChange}\n                    layers={this._renderLayers()}\n                    effects={this._effects}\n                    controller={{\n                        // touchZoom: true,\n                        // touchRotate: true,\n                        TouchZoomRotate: true,\n                        dragPan: !this.state.draggingWhileEditing,\n                        dragRotate: !this.state.draggingWhileEditing\n                    }}\n                >\n                    <StaticMap\n                        asyncRender={true}\n                        dragRotate={true}\n                        reuseMaps={true}\n                        mapboxApiAccessToken={\n                            process.env.REACT_APP_MAPBOX_TOKEN\n                        }\n                        mapStyle={settings.map.mapStyle.blue}\n                        preventStyleDiffing={true}\n                    />\n                </DeckGL>\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = {\n    listenToMapEvents: listenToMapEvents\n};\n\nexport default connect(null, mapDispatchToProps)(Map);\n","import { Matrix3d, RectPoints, Vector } from \"./layer\";\nconst { solve } = require(\"numeric\");\n\nexport const round = (num: number, precision: number) => {\n    var factor = Math.pow(10, precision);\n    var tempNumber = num * factor;\n    var roundedTempNumber = Math.round(tempNumber);\n    return roundedTempNumber / factor;\n};\n\n// tslint:disable-next-line:no-any\nexport const range = (num: number) =>\n    (Array as any)(num)\n        .fill()\n        .map((_: any, i: any) => i * i);\n\nexport const transformPointsToMatrix = (\n    sourcePoints: RectPoints,\n    targetPoints: RectPoints\n): Matrix3d => {\n    const a: number[][] = [];\n    const b: number[] = [];\n\n    for (let i = 0, n = sourcePoints.length; i < n; ++i) {\n        const [fromX, fromY] = sourcePoints[i];\n        const [toX, toY] = targetPoints[i];\n\n        a.push(\n            [fromX, fromY, 1, 0, 0, 0, -fromX * toX, -fromY * toX],\n            [0, 0, 0, fromX, fromY, 1, -fromX * toY, -fromY * toY]\n        );\n\n        b.push(toX, toY);\n    }\n\n    const h = solve(a, b, true);\n\n    return [\n        h[0],\n        h[3],\n        0,\n        h[6],\n        h[1],\n        h[4],\n        0,\n        h[7],\n        0,\n        0,\n        1,\n        0,\n        h[2],\n        h[5],\n        0,\n        1\n    ].map(num => round(num, 10)) as Matrix3d;\n};\n\nexport const matrixToTransform = (matrix: Matrix3d) =>\n    `matrix3d(${matrix.join(\", \")})`;\n\nexport const vectorToTransform = (vector: Vector) =>\n    `translate(${vector[0]}px, ${vector[1]}px)`;\n","import * as React from \"react\";\nimport { Anchor, Vector } from \"./layer\";\nimport { vectorToTransform } from \"./util\";\n\nconst anchorSize = 30;\nconst halfAnchor = anchorSize / 2;\n\nconst styles = {\n    container: {\n        width: anchorSize,\n        height: anchorSize,\n        borderRadius: \"50%\",\n        position: \"absolute\" as \"absolute\",\n        border: \"4px solid white\",\n        cursor: \"move\"\n    },\n    \"top-left\": {\n        left: -halfAnchor,\n        top: -halfAnchor\n    },\n    \"bottom-left\": {\n        left: -halfAnchor,\n        bottom: -halfAnchor\n    },\n    \"top-right\": {\n        top: -halfAnchor,\n        right: -halfAnchor\n    },\n    \"bottom-right\": {\n        bottom: -halfAnchor,\n        right: -halfAnchor\n    }\n};\n\nexport interface Props {\n    position: Anchor;\n    onMouseEnter?: (position: Anchor) => void;\n    // tslint:disable-next-line:no-any\n    onMouseDown: (evt: any, position: Anchor) => void;\n    onMouseUp: (position: Anchor) => void;\n    translation: Vector;\n    style?: React.CSSProperties;\n    className?: string;\n}\n\nexport const AnchorComponent: React.StatelessComponent<Props> = ({\n    position,\n    translation,\n    onMouseEnter,\n    onMouseDown,\n    onMouseUp,\n    className = \"\",\n    style = {}\n}) => (\n    <div\n        onMouseEnter={() => onMouseEnter && onMouseEnter(position)}\n        onMouseDown={evt => onMouseDown(evt, position)}\n        onMouseUp={() => onMouseUp(position)}\n        className={className}\n        style={{\n            ...styles.container,\n            ...styles[position],\n            ...style,\n            transform: vectorToTransform(translation)\n        }}\n    />\n);\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nconst useStyles = makeStyles(theme => ({\n    button: {\n        margin: theme.spacing(1),\n        position: \"fixed\",\n        top: \"50vh\",\n        zIndex: 1000\n    }\n}));\n\nexport default function DeleteLocalStorage() {\n    const classes = useStyles();\n\n    return (\n        <Grid container alignItems=\"center\" justify=\"center\">\n            <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                className={classes.button}\n                startIcon={<DeleteIcon />}\n            >\n                Reset Projection Mapping\n            </Button>\n        </Grid>\n    );\n}\n","import * as React from \"react\";\nimport { AnchorComponent } from \"./anchor\";\nimport {\n    matrixToTransform,\n    transformPointsToMatrix,\n    vectorToTransform\n} from \"./util\";\n\nimport DeleteLocalStorage from \"./deleteLocalStorage\";\n\n// Component interfaces\nexport interface Props {\n    style?: React.CSSProperties;\n    className?: string;\n    isEditMode?: boolean;\n    x?: number;\n    y?: number;\n    anchorStyle?: React.CSSProperties;\n    anchorClassName?: string;\n}\n\nexport interface Context {\n    isEditMode: boolean;\n}\n\nexport interface State {\n    matrix: Matrix3d;\n    translateDelta: { [key: string]: Vector };\n    sourcePoints?: RectPoints;\n    transformOrigin: Vector;\n    containerTranslate: Vector;\n}\n\nconst styles = {\n    container: {\n        position: \"relative\" as \"relative\"\n    }\n};\n\n// Sorted\nexport type Anchor = \"top-left\" | \"top-right\" | \"bottom-right\" | \"bottom-left\";\nconst anchors: Anchor[] = [\n    \"top-left\",\n    \"top-right\",\n    \"bottom-right\",\n    \"bottom-left\"\n];\n\n// 4x4 matrix\nexport type Matrix3d = [\n    number,\n    number,\n    number,\n    number,\n    number,\n    number,\n    number,\n    number,\n    number,\n    number,\n    number,\n    number,\n    number,\n    number,\n    number,\n    number\n];\n\n// top-left, top-right, bottom-right, bottom-left\nexport type RectPoints = [Vector, Vector, Vector, Vector];\n\nexport type Vector = [number, number]; // [x, y]\n\nconst defaultMatrix: Matrix3d = [\n    1,\n    0,\n    0,\n    0,\n    0,\n    1,\n    0,\n    0,\n    0,\n    0,\n    1,\n    0,\n    0,\n    0,\n    0,\n    1 // second and third for x and y position of element\n];\n\nconst _setDeltaVal = () => {\n    let deltaInitVals: any = {};\n    anchors.forEach(e => {\n        deltaInitVals[e] = [0, 0];\n    });\n    return deltaInitVals;\n};\n\nexport class Layer extends React.Component<Props, State> {\n    container: HTMLElement | null;\n    layerTranslateDelta: Vector | undefined;\n    anchorTranslateDelta: Vector | undefined;\n    isAnchorDragging = false;\n    targetPoints: RectPoints;\n    anchorMoving: Anchor | undefined;\n    state: State = {\n        matrix: defaultMatrix,\n        translateDelta: _setDeltaVal(),\n        sourcePoints: undefined,\n        transformOrigin: [0, 0],\n        containerTranslate: [this.props.x || 0, this.props.y || 0]\n    };\n\n    componentDidMount() {\n        console.log(\"starting projMap...\");\n        window.addEventListener(\"mousemove\", this.onAnchorMouseMove);\n        window.addEventListener(\"mousemove\", this.onMouseMove);\n        if (this.container) {\n            const { width, height } = this.container.getBoundingClientRect();\n            const sourcePoints = [\n                [0, 0],\n                [width, 0],\n                [width, height],\n                [0, height]\n            ] as RectPoints;\n\n            this.targetPoints = [...sourcePoints] as RectPoints;\n            this.setState({ sourcePoints });\n        }\n    }\n    componentDidUpdate(prevProps: any, prevState: State) {\n        // if entered keystone mode\n        if (!prevProps.isEditMode && this.props.isEditMode) {\n            // if found prev. keystone data\n            if (localStorage.getItem(\"projMap\")) {\n                console.log(\"loading prev. projMap...\");\n                let ls: any = localStorage.getItem(\"projMap\");\n                this.setState(JSON.parse(ls));\n            }\n            // if left keystone mode\n        } else if (prevProps.isEditMode && !this.props.isEditMode) {\n            console.log(\"saving edited projMap...\");\n            // save whatever keystone was in state\n            localStorage.setItem(\"projMap\", JSON.stringify(prevState));\n        }\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"mousemove\", this.onAnchorMouseMove);\n        window.removeEventListener(\"mousemove\", this.onMouseMove);\n    }\n\n    onAnchorMouseDown = (evt: any, position: any) => {\n        evt.stopPropagation();\n        this.anchorTranslateDelta = [\n            evt.pageX - this.state.translateDelta[position][0],\n            evt.pageY - this.state.translateDelta[position][1]\n        ];\n\n        this.anchorMoving = position;\n    };\n\n    onAnchorMouseMove = (evt: any) => {\n        if (\n            !this.anchorTranslateDelta ||\n            !this.state.sourcePoints ||\n            !this.anchorMoving\n        ) {\n            return;\n        }\n        evt.preventDefault();\n        evt.stopPropagation();\n        const vectorIndexToModify = anchors.indexOf(this.anchorMoving);\n\n        const deltaX = evt.pageX - this.anchorTranslateDelta[0];\n        const deltaY = evt.pageY - this.anchorTranslateDelta[1];\n\n        this.targetPoints[vectorIndexToModify] = [\n            this.state.sourcePoints[vectorIndexToModify][0] + deltaX,\n            this.state.sourcePoints[vectorIndexToModify][1] + deltaY\n        ];\n\n        this.setState({\n            matrix: transformPointsToMatrix(\n                this.state.sourcePoints,\n                this.targetPoints!\n            ),\n            translateDelta: {\n                ...this.state.translateDelta,\n                [this.anchorMoving]: [deltaX, deltaY]\n            }\n        });\n    };\n\n    onAnchorMouseUp = (position: any) => {\n        this.anchorTranslateDelta = undefined;\n        this.anchorMoving = undefined;\n    };\n\n    onMouseUp = () => {\n        this.layerTranslateDelta = undefined;\n    };\n\n    onMouseMove = (evt: any) => {\n        if (!this.layerTranslateDelta || !this.props.isEditMode) {\n            return;\n        }\n\n        const newVector: Vector = [\n            evt.pageX - this.layerTranslateDelta[0],\n            evt.pageY - this.layerTranslateDelta[1]\n        ];\n\n        this.setState({\n            containerTranslate: newVector\n        });\n    };\n\n    onMouseDown = (evt: any) => {\n        const { containerTranslate } = this.state;\n        this.layerTranslateDelta = [\n            evt.pageX - containerTranslate[0],\n            evt.pageY - containerTranslate[1]\n        ];\n    };\n\n    _clearLocalStraoge = () => {\n        if (localStorage.getItem(\"projMap\")) {\n            localStorage.removeItem(\"projMap\");\n        }\n        window.location.reload();\n    };\n\n    render() {\n        const {\n            style,\n            isEditMode,\n            className,\n            anchorStyle,\n            anchorClassName\n        } = this.props;\n        const {\n            translateDelta,\n            matrix,\n            containerTranslate,\n            transformOrigin\n        } = this.state;\n\n        return (\n            <React.Fragment>\n                {isEditMode && (\n                    <div onClick={() => this._clearLocalStraoge()}>\n                        <DeleteLocalStorage />\n                    </div>\n                )}\n\n                <div\n                    onMouseDown={this.onMouseDown}\n                    onMouseUp={this.onMouseUp}\n                    style={{\n                        cursor: isEditMode ? \"all-scroll\" : \"inherit\",\n                        position: \"relative\",\n                        display: \"inline-block\",\n                        transform: vectorToTransform(containerTranslate)\n                    }}\n                >\n                    <div\n                        ref={ref => {\n                            this.container = ref;\n                        }}\n                        style={{\n                            ...styles.container,\n                            ...style,\n                            pointerEvents: isEditMode ? \"none\" : \"all\",\n                            transform: matrixToTransform(matrix),\n                            transformOrigin: `${transformOrigin[0]}px ${transformOrigin[1]}px 0px`\n                        }}\n                        className={className}\n                    >\n                        {this.props.children}\n                    </div>\n                    {isEditMode && (\n                        <div>\n                            {anchors.map((anchor, index) => (\n                                <AnchorComponent\n                                    style={anchorStyle}\n                                    className={anchorClassName}\n                                    key={anchor}\n                                    translation={translateDelta[anchor]}\n                                    position={anchor}\n                                    onMouseDown={this.onAnchorMouseDown}\n                                    onMouseUp={this.onAnchorMouseUp}\n                                />\n                            ))}\n                        </div>\n                    )}\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n","import React, { Component } from \"react\";\nimport MAP from \"./baseMap\";\nimport { connect } from \"react-redux\";\nimport { Layer } from \"../prjMap/layer\";\n\nclass MapContainer extends Component {\n    _checkKeystone = () => {\n        return this.props.menu.includes(\"KS\") ? true : false;\n    };\n\n    render() {\n        if (\n            this.props &&\n            this.props.cityioData &&\n            this.props.cityioData.header\n        ) {\n            return (\n                <Layer\n                    className=\"mapLayer\"\n                    style={{\n                        height: \"99.5vh\",\n                        width: \"100vw\"\n                    }}\n                    isEditMode={this._checkKeystone()}\n                >\n                    <MAP\n                        cityioData={this.props.cityioData}\n                        menu={this.props.menu}\n                    />\n                </Layer>\n            );\n        } else {\n            return null;\n        }\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        cityioData: state.CITYIO,\n        menu: state.MENU\n    };\n};\n\nexport default connect(mapStateToProps, null)(MapContainer);\n","import React, { Component } from \"react\";\nimport { CircularGridLines, RadarChart } from \"react-vis\";\nimport settings from \"../../../settings/settings.json\";\nimport \"../../../../node_modules/react-vis/dist/style.css\";\nimport \"./Radar.css\";\n\nclass Radar extends Component {\n    constructor(props) {\n        super(props);\n        this.domain = settings.radar.domain;\n        this.colorRange = settings.radar.colorRange;\n        this.state = {\n            cityioData: {},\n            radarData: []\n        };\n\n        this.radarSize = 700;\n    }\n\n    generateData() {\n        let data = {};\n        let dataStatic = {};\n        for (let i in this.domain) {\n            // b/s data for now\n            data[this.domain[i].name] = this.props.cityioData.grid[i][0] / 10;\n            // compared with other b/s data\n            dataStatic[this.domain[i].name] = i / this.domain.length;\n        }\n        this.setState({ radarData: [data, dataStatic] });\n    }\n\n    componentDidMount() {\n        console.log(\">> init radar\");\n\n        this.generateData();\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevState.cityioData !== this.props.cityioData) {\n            this.setState({ cityioData: this.props.cityioData });\n            console.log(\"new radar data..\");\n            this.generateData();\n        }\n    }\n\n    render() {\n        return (\n            <RadarChart\n                className=\"Radar blur\"\n                animation\n                data={this.state.radarData}\n                domains={this.domain}\n                colorRange={this.colorRange}\n                style={{\n                    polygons: {\n                        fillOpacity: 0.2,\n                        strokeWidth: 2\n                    },\n                    axes: {\n                        text: {\n                            opacity: 0,\n                            fontWeight: 700,\n                            fill: \"white\"\n                        },\n                        strokeWidth: 0\n                    },\n                    labels: {\n                        textAnchor: \"middle\",\n                        fontSize: 12,\n                        fontWeight: \"600\",\n                        fill: \"white\"\n                    }\n                }}\n                margin={{\n                    left: this.radarSize / 6,\n                    top: this.radarSize / 6,\n                    bottom: this.radarSize / 6,\n                    right: this.radarSize / 6\n                }}\n                width={this.radarSize}\n                height={this.radarSize}\n            >\n                <CircularGridLines\n                    style={{\n                        fill: \"white\",\n                        fillOpacity: 0.1,\n                        backgroundColor: \"#fff\",\n                        opacity: 0.5,\n                        stroke: \"white\",\n                        width: 0.1\n                    }}\n                    tickValues={[...new Array(11)].map((v, i) => i / 10 - 1)}\n                />\n            </RadarChart>\n        );\n    }\n}\n\nexport default Radar;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Radar from \"./Radar/Radar\";\n\nclass VisContainer extends Component {\n    render() {\n        if (\n            this.props.menu &&\n            this.props.menu.includes(\"RADAR\") &&\n            this.props.cityioData &&\n            this.props.cityioData.grid\n        ) {\n            return <Radar cityioData={this.props.cityioData} />;\n        } else {\n            return null;\n        }\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        cityioData: state.CITYIO,\n        menu: state.MENU\n    };\n};\n\nexport default connect(mapStateToProps, null)(VisContainer);\n","import { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport configureStore from \"./redux/store\";\nimport CityIO from \"./services/cityIO/cityIO\";\nimport MenuContainer from \"./components/menu/menuContainer\";\nimport MapContainer from \"./components/baseMap/baseMapContainer\";\nimport VisContainer from \"./components/vis/visContainer\";\nimport React, { Component } from \"react\";\n\nconst store = configureStore();\n\nclass App extends Component {\n    render() {\n        return (\n            <Provider store={store}>\n                <MapContainer />\n                <CityIO />\n                <VisContainer />\n                <MenuContainer />\n            </Provider>\n        );\n    }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst root = document.getElementById(\"root\");\nconst render = () => {\n    return ReactDOM.render(<App />, root);\n};\n\nrender(App);\n\nif (module.hot) {\n    module.hot.accept(\"./App\", () => {\n        const NextApp = require(\"./App\").default;\n        render(NextApp);\n    });\n}\n"],"sourceRoot":""}