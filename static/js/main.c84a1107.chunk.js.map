{"version":3,"sources":["redux/actions.js","redux/reducer.js","redux/store.js","services/cityIO.js","docs/docs.js","components/menu/RangeSlider.js","components/menu/PaperSheet.js","components/menu/menu.js","components/menu/menuContainer.js","components/baseMap/baseMapUtils.js","services/consoleStyle.js","components/baseMap/baseMap.js","components/prjMap/util.ts","components/prjMap/anchor.tsx","components/prjMap/deleteLocalStorage.js","components/prjMap/layer.tsx","components/baseMap/baseMapContainer.js","components/vis/Radar/Radar.js","components/vis/visContainer.js","App.js","index.js"],"names":["GET_CITYIO_DATA","LISTEN_TO_MAP_EVENTS","LISTEN_TO_ABM_SLIDERS","MENU_INTERACTION","listOfToggles","Object","keys","settings","menu","toggles","menuInitState","i","length","values","push","initialState","MENU","CITYIO","MAP","SLIDERS","reducer","state","action","type","data","reduxDevTools","window","__REDUX_DEVTOOLS_EXTENSION__","configureStore","createStore","CityIO","props","handleURL","cityioURL","cityIO","baseURL","tableName","getCityIOHash","timer","setInterval","interval","console","log","URL","fetch","then","response","json","result","handleCityIOHashes","catch","e","id","oldHashs","setState","cityIOmodulesStatus","readyToShareWithRedux","cityIOmodules","forEach","module","hashes","setNestedState","getCityIOmoduleData","checkDoneCityIO","moduleName","status","sharePropsWithRedux","cityIOmodulesData","getCityioData","parent","child","holder","axios","get","error","headers","request","message","config","this","Component","mapDispatchToProps","connect","ReactMarkdown","require","docsURL","Docs","text","doc","mode","className","source","transformImageUri","uri","startsWith","map","layers","ABM","startSimHour","endSimHour","sliderStart","Date","getHours","sliderEnd","marks","value","label","useStyles","makeStyles","root","width","listenToSlidersEvents","ABMlayerEvents","classes","React","useState","timeValue","setTimeValue","speedValue","setSpeedValue","Typography","gutterBottom","Slider","min","max","onChange","newValue","time","valueLabelDisplay","aria-labelledby","speed","theme","padding","spacing","position","bottom","left","PaperSheet","Paper","listenToMenuUI","menuState","maxWidth","margin","paper","background","color","list","fullList","menuButton","top","editButton","resetViewButton","createMuiTheme","palette","filter","k","String","toggleStateArray","setChecked","toggleDrawer","side","open","event","key","handleToggle","currentIndex","indexOf","newChecked","splice","checked","togglesCompsArray","thisToggle","ListItem","ListItemText","primary","ListItemSecondaryAction","Switch","edge","includes","ThemeProvider","Drawer","anchor","onClose","role","onClick","onKeyDown","List","Fab","MenuContainer","cityioData","grid","tzlookup","setDirLightSettings","header","hourAtLatLong","toLocaleString","timeZone","spatial","latitude","longitude","hour","hour12","getUTCHours","parseInt","_proccessGridData","types","TUIgridData","wholeGrid","meta_grid","interactiveGridData","interactive_grid_data","features","properties","interactiveMapping","interactive_grid_mapping","gridCellType","interactiveCellProps","cellValueByIndex","height","JSON","parse","stringify","_proccesnetworkGeojson","metaGrid","networkGeojson","pnttLatLong","geometry","coordinates","interactive_network_data","noneType","netTypes","land_use","netWidth","pnt","_proccessGridTextData","textData","toString","_proccessAccessData","accessData","access","d","heatmap","_postMapEditsToCityIO","endPoint","dataProps","post","consoleStyle","join","Map","_mulipleObjPicked","dim","pickingRadius","x","y","deckGL","pickObjects","_handleCellsSelection","randomType","multiSelectedObj","selected","thisCellProps","object","interactive","old_height","old_color","selectedCellsState","_handleCellsHover","_handleNetSelection","rndNetType","randomNetType","multiEdgeSelected","thisEdgeProps","selectedNetState","_renderSelectionTarget","mousePos","targetMetaData","rc","divSize","mouseX","clientX","mouseY","clientY","style","border","backgroundColor","mouseDown","borderColor","borderRadius","zIndex","pointerEvents","fontSize","name","_rndType","Math","random","netKeys","_handleKeyUp","keyDownState","_handleKeyDown","nativeEvent","draggingWhileEditing","viewState","initialViewState","animationFrame","_onViewStateChange","bind","timeZoneOffset","dirLightSettings","timestamp","UTC","intensity","_shadow","cancelAnimationFrame","_rightClickViewRotate","_setupEffects","_setViewStateToTableHeader","prevProps","prevState","_animate","gridTextData","pitch","zoom","bearing","rotation","ambientLight","AmbientLight","dirLight","_SunLight","lightingEffect","LightingEffect","shadowColor","_effects","animationSpeed","t","offset","date","directionalLights","getFullYear","getMonth","getDay","getMinutes","getSeconds","requestAnimationFrame","document","getElementById","addEventListener","evt","preventDefault","TextLayer","getText","getPosition","getColor","getSize","ScatterplotLayer","pickable","opacity","stroked","filled","radiusScale","radiusMinPixels","radiusMaxPixels","getFillColor","getRadius","updateTriggers","transitions","onDrag","onDragStart","onDragEnd","GeoJsonLayer","visible","extruded","lineWidthScale","lineWidthMinPixels","getElevation","undefined","onHover","TripsLayer","getPath","path","getTimestamps","timestamps","getWidth","rounded","trailLength","currentTime","PathLayer","noisePath","HeatmapLayer","colorRange","colors","radiusPixels","getWeight","housing","onKeyUp","onMouseMove","onMouseUp","onMouseDown","getCursor","ref","deck","onViewStateChange","_renderLayers","effects","controller","touchZoom","touchRotate","dragPan","dragRotate","keyboard","asyncRender","reuseMaps","mapboxApiAccessToken","process","mapStyle","blue","preventStyleDiffing","listenToMapEvents","solve","transformPointsToMatrix","sourcePoints","targetPoints","a","b","n","fromX","fromY","toX","toY","h","num","precision","factor","pow","tempNumber","round","matrixToTransform","matrix","vectorToTransform","vector","styles","container","cursor","anchorSize","right","AnchorComponent","translation","onMouseEnter","transform","button","DeleteLocalStorage","Grid","alignItems","justify","Button","variant","startIcon","anchors","defaultMatrix","_setDeltaVal","deltaInitVals","Layer","layerTranslateDelta","anchorTranslateDelta","isAnchorDragging","anchorMoving","translateDelta","transformOrigin","containerTranslate","onAnchorMouseDown","stopPropagation","pageX","pageY","onAnchorMouseMove","vectorIndexToModify","deltaX","deltaY","onAnchorMouseUp","isEditMode","newVector","_clearLocalStraoge","localStorage","getItem","removeItem","location","reload","getBoundingClientRect","ls","setItem","removeEventListener","anchorStyle","anchorClassName","display","children","index","MapContainer","_checkKeystone","overflow","Radar","domain","radar","radarData","radarSize","dataStatic","generateData","animation","domains","polygons","fillOpacity","strokeWidth","axes","fontWeight","fill","labels","textAnchor","stroke","tickValues","Array","v","VisContainer","store","MapRoute","search","substring","DocsRoute","Fragment","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.c84a1107.chunk.js","sourcesContent":["/**\n * ACTIONS\n */\nexport const GET_CITYIO_DATA = \"GET_CITYIO_DATA\";\nexport function getCityioData(data) {\n    return { type: GET_CITYIO_DATA, data };\n}\n\nexport const LISTEN_TO_MAP_EVENTS = \"LISTEN_TO_MAP_EVENTS\";\nexport function listenToMapEvents(data) {\n    return { type: LISTEN_TO_MAP_EVENTS, data };\n}\n\nexport const LISTEN_TO_ABM_SLIDERS = \"LISTEN_TO_ABM_SLIDERS\";\nexport function listenToSlidersEvents(data) {\n    return { type: LISTEN_TO_ABM_SLIDERS, data };\n}\n\nexport const MENU_INTERACTION = \"MENU_INTERACTION\";\n\nexport function listenToMenuUI(data) {\n    return { type: MENU_INTERACTION, data };\n}\n","import settings from \"../settings/settings.json\";\n\nimport {\n    GET_CITYIO_DATA,\n    MENU_INTERACTION,\n    LISTEN_TO_MAP_EVENTS,\n    LISTEN_TO_ABM_SLIDERS\n} from \"./actions\";\n\n/**\n * INIT STATE\n */\nconst listOfToggles = Object.keys(settings.menu.toggles);\nlet menuInitState = [];\nfor (let i = 0; i < listOfToggles.length; i++) {\n    if (Object.values(settings.menu.toggles)[i]) {\n        menuInitState.push(listOfToggles[i]);\n    }\n}\nconst initialState = {\n    MENU: menuInitState,\n    CITYIO: {},\n    MAP: {},\n    SLIDERS: {}\n};\n\n/**\n * REDUCER\n */\nexport default function reducer(state = initialState, action) {\n    switch (action.type) {\n        case GET_CITYIO_DATA:\n            return { ...state, CITYIO: action.data };\n        case MENU_INTERACTION:\n            return { ...state, MENU: action.data };\n        case LISTEN_TO_MAP_EVENTS:\n            return { ...state, MAP: action.data };\n        case LISTEN_TO_ABM_SLIDERS:\n            return { ...state, SLIDERS: action.data };\n        default:\n            return state;\n    }\n}\n","import { createStore } from \"redux\";\nimport reducer from \"./reducer\";\n\nconst reduxDevTools =\n    window.__REDUX_DEVTOOLS_EXTENSION__ &&\n    window.__REDUX_DEVTOOLS_EXTENSION__();\n\nconst configureStore = () => {\n    const store = createStore(reducer, reduxDevTools);\n\n    if (process.env.NODE_ENV !== \"production\") {\n        if (module.hot) {\n            module.hot.accept(\"./reducer\", () => {\n                store.replaceReducer(reducer);\n            });\n        }\n    }\n\n    return store;\n};\n\nexport default configureStore;\n","import { Component } from \"react\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { getCityioData } from \"../redux/actions\";\nimport settings from \"../settings/settings.json\";\n\nclass CityIO extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            oldHashs: {},\n            cityIOmodulesData: {}\n        };\n        this.cityioURL = null;\n    }\n\n    /**\n     * start fetching API hashes to check for new data\n     */\n    componentDidMount() {\n        this.handleURL();\n    }\n\n    handleURL = () => {\n        this.cityioURL = settings.cityIO.baseURL + this.props.tableName;\n        // get the hashes first\n        this.getCityIOHash(this.cityioURL + \"/meta\");\n        // and every interval\n        this.timer = setInterval(\n            () => this.getCityIOHash(this.cityioURL + \"/meta\"),\n            settings.cityIO.interval\n        );\n        console.log(\n            \"starting cityIO interval every..\",\n            settings.cityIO.interval\n        );\n    };\n\n    /**\n     * returns only the hasees from API\n     */\n    getCityIOHash = URL => {\n        fetch(URL)\n            .then(response => response.json())\n            .then(result => {\n                this.handleCityIOHashes(result);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    };\n\n    /**\n     * check for updated hashes.\n     * if new hashes exist,\n     * fetch !! WHOLE API (for now)\n     */\n    handleCityIOHashes = result => {\n        // if master hash ID has changed (cityIO table state)\n        if (result.id !== this.state.oldHashs.id) {\n            // reset the cityIOmodulesStatus\n            this.setState({ cityIOmodulesStatus: {} });\n\n            // reset the state of this flag\n            this.setState({ readyToShareWithRedux: false });\n\n            // new data in table, get all modules\n            // that are listed in settings\n            settings.cityIO.cityIOmodules.forEach(module => {\n                // only update modules that have new data\n                if (result.hashes[module] !== this.state.oldHashs[module]) {\n                    // set this module as not ready\n                    this.setNestedState(\"cityIOmodulesStatus\", module, false);\n                    // get the module data from cityIO\n                    this.getCityIOmoduleData(\n                        module,\n                        this.cityioURL + \"/\" + module\n                    );\n                    // update this new module hash in state\n                    this.setNestedState(\n                        \"oldHashs\",\n                        module,\n                        result.hashes[module]\n                    );\n                } else {\n                    // update module name with ok\n                    this.setNestedState(\"cityIOmodulesStatus\", module, true);\n                }\n            });\n            // finally, put to state the hashes master id\n            this.setNestedState(\"oldHashs\", \"id\", result.id);\n        }\n    };\n\n    checkDoneCityIO = moduleName => {\n        this.setNestedState(\"cityIOmodulesStatus\", moduleName, true);\n\n        // check if all modules are done\n        for (const status in this.state.cityIOmodulesStatus) {\n            if (this.state.cityIOmodulesStatus[status] !== true) {\n                // we still need to update some module, stop\n                return;\n            }\n        }\n        //  if so, change the state of 'readyToShareWithRedux'\n        this.setState({ readyToShareWithRedux: true });\n    };\n\n    sharePropsWithRedux = () => {\n        if (this.state.readyToShareWithRedux) {\n            const data = this.state.cityIOmodulesData;\n            data.tableName = this.props.tableName;\n            console.log(\"done updating from cityIO..\");\n            // finally, send data to redux\n            this.props.getCityioData(data);\n        }\n    };\n\n    setNestedState = (parent, child, data) => {\n        var holder = { ...this.state[parent] };\n        holder[child] = data;\n        this.setState({ [parent]: holder });\n    };\n\n    getCityIOmoduleData = (moduleName, URL) => {\n        axios\n            .get(URL)\n            .then(response => {\n                // put response to state obj\n                this.setNestedState(\n                    \"cityIOmodulesData\",\n                    moduleName,\n                    response.data\n                );\n                console.log(\"...updating module:\", moduleName);\n                this.checkDoneCityIO(moduleName);\n            })\n\n            .catch(error => {\n                if (error.response) {\n                    console.log(\n                        \"error.response:\",\n                        \"\\n\",\n                        error.response.data,\n                        \"\\n\",\n                        error.response.status,\n                        \"\\n\",\n                        error.response.headers\n                    );\n                } else if (error.request) {\n                    console.log(\"error.request:\", error.request);\n                } else {\n                    console.log(\"misc error:\", error.message);\n                }\n                console.log(\"request config:\", error.config);\n            });\n    };\n\n    render() {\n        this.sharePropsWithRedux();\n        return null;\n    }\n}\n\nconst mapDispatchToProps = {\n    getCityioData: getCityioData\n};\n\nexport default connect(null, mapDispatchToProps)(CityIO);\n","import React, { Component } from \"react\";\nimport settings from \"../settings/settings.json\";\n\nimport \"./docs.css\";\nimport axios from \"axios\";\nconst ReactMarkdown = require(\"react-markdown\");\n\nconst docsURL = settings.docsURL;\n\nclass Docs extends Component {\n    state = { text: \"loading...\" };\n\n    componentDidMount() {\n        const doc = docsURL + this.props.doc + \".md\";\n        console.log(doc);\n\n        // get the doc\n        axios\n            .get(doc, {\n                mode: \"no-cors\"\n            })\n            .then(response => {\n                this.setState({ text: response.data });\n            });\n    }\n\n    render() {\n        return (\n            <div className=\"docs\">\n                <ReactMarkdown\n                    source={this.state.text}\n                    transformImageUri={uri =>\n                        uri.startsWith(\"http\")\n                            ? uri\n                            : `${settings.docsURL}${uri}`\n                    }\n                />\n            </div>\n        );\n    }\n}\n\nexport default Docs;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Slider from \"@material-ui/core/Slider\";\nimport settings from \"../../settings/settings.json\";\nimport { connect } from \"react-redux\";\nimport { listenToSlidersEvents } from \"../../redux/actions\";\n\nconst sixAm = 6 * 3600;\nconst { startSimHour, endSimHour } = settings.map.layers.ABM;\nconst sliderStart = new Date((sixAm + startSimHour) * 1000).getHours();\nconst sliderEnd = new Date((sixAm + endSimHour) * 1000).getHours();\n\nconst marks = [\n    {\n        value: 0,\n        label: \"12AM\"\n    },\n    {\n        value: 6,\n        label: \"6AM\"\n    },\n    {\n        value: 12,\n        label: \"12PM\"\n    },\n    {\n        value: 18,\n        label: \"6PM\"\n    }\n];\n\nconst useStyles = makeStyles({\n    root: {\n        width: \"100%\"\n    }\n});\n\nfunction RangeSlider(props) {\n    const classes = useStyles();\n    const [timeValue, setTimeValue] = React.useState([\n        sliderStart,\n        12,\n        sliderEnd\n    ]);\n\n    const [speedValue, setSpeedValue] = React.useState([50]);\n\n    const handleSetTimeValue = (e, newValue) => {\n        setTimeValue(newValue);\n        // ! not working\n        props.listenToSlidersEvents({\n            ...props,\n            SLIDERS: {\n                ...props,\n                time: newValue\n            }\n        });\n    };\n\n    const handleSetSpeedValue = (e, newValue) => {\n        setSpeedValue(newValue);\n        // ! not working\n        props.listenToSlidersEvents({\n            ...props,\n            SLIDERS: {\n                ...props,\n                speed: newValue\n            }\n        });\n    };\n\n    return (\n        <div className={classes.root}>\n            <Typography id=\"range-slider\" gutterBottom>\n                Simulation Range\n            </Typography>\n            <Slider\n                min={0}\n                max={23}\n                marks={marks}\n                value={timeValue}\n                onChange={handleSetTimeValue}\n                valueLabelDisplay=\"auto\"\n                aria-labelledby=\"range-slider\"\n            />\n            <Typography id=\"range-slider\" gutterBottom>\n                Simulation Speed\n            </Typography>\n            <Slider\n                min={0}\n                max={100}\n                value={speedValue}\n                onChange={handleSetSpeedValue}\n                valueLabelDisplay=\"auto\"\n                aria-labelledby=\"range-slider\"\n            />\n        </div>\n    );\n}\n\nconst mapStateToProps = state => {\n    return {\n        ABMlayerEvents: state.MAP\n    };\n};\n\nconst mapDispatchToProps = {\n    listenToSlidersEvents: listenToSlidersEvents\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RangeSlider);\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport RangeSlider from \"./RangeSlider\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        padding: theme.spacing(1, 5),\n        position: \"fixed\",\n        bottom: \"3vw\",\n        left: \"3vw\",\n        width: \"20vw\"\n    }\n}));\n\nexport default function PaperSheet() {\n    const classes = useStyles();\n\n    return (\n        <Paper className={classes.root}>\n            <RangeSlider />\n        </Paper>\n    );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport { createMuiTheme } from \"@material-ui/core\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Fab from \"@material-ui/core/Fab\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport { connect } from \"react-redux\";\nimport { listenToMenuUI } from \"../../redux/actions\";\nimport settings from \"../../settings/settings.json\";\nimport PaperSheet from \"./PaperSheet\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport NearMeIcon from \"@material-ui/icons/NearMe\";\nimport NavigationIcon from \"@material-ui/icons/Navigation\";\n\n// import CircularProgress from \"@material-ui/core/CircularProgress\";\n\nfunction Menu(props) {\n    const listOfToggles = Object.keys(settings.menu.toggles);\n    const useStyles = makeStyles(theme => ({\n        root: {\n            width: \"100%\",\n            maxWidth: \"15em\",\n            position: \"absolute\",\n            \"& > *\": {\n                margin: theme.spacing(1)\n            }\n        },\n        paper: {\n            background: \"black\",\n            color: \"white\"\n        },\n        list: {\n            width: \"15em\"\n        },\n        fullList: {\n            width: \"auto\"\n        },\n\n        menuButton: {\n            position: \"fixed\",\n            top: theme.spacing(2),\n            left: theme.spacing(2)\n        },\n        editButton: {\n            position: \"fixed\",\n            top: theme.spacing(12),\n            left: theme.spacing(2)\n        },\n        resetViewButton: {\n            position: \"fixed\",\n            top: theme.spacing(22),\n            left: theme.spacing(2)\n        }\n    }));\n\n    const classes = useStyles();\n    const theme = createMuiTheme({\n        palette: {\n            type: \"dark\"\n        }\n    });\n    const [toggleStateArray, setChecked] = React.useState(\n        Object.keys(settings.menu.toggles)\n            .filter(function(k) {\n                return settings.menu.toggles[k];\n            })\n            .map(String)\n    );\n\n    const [state, setState] = React.useState({\n        left: false\n    });\n\n    const toggleDrawer = (side, open) => event => {\n        if (\n            event.type === \"keydown\" &&\n            (event.key === \"Tab\" || event.key === \"Shift\")\n        ) {\n            return;\n        }\n\n        setState({ ...state, [side]: open });\n    };\n\n    const sideList = side => (\n        <div\n            className={classes.list}\n            role=\"presentation\"\n            onClick={toggleDrawer(side, false)}\n            onKeyDown={toggleDrawer(side, false)}\n        ></div>\n    );\n    const handleToggle = value => () => {\n        const currentIndex = toggleStateArray.indexOf(value);\n        const newChecked = [...toggleStateArray];\n        if (currentIndex === -1) {\n            newChecked.push(value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n        setChecked(newChecked);\n        setState({ ...state, checked: newChecked });\n\n        props.listenToMenuUI(newChecked);\n    };\n\n    let togglesCompsArray = [];\n    for (let i = 0; i < listOfToggles.length; i++) {\n        const thisToggle = (\n            <ListItem key={listOfToggles[i]}>\n                {/* <CircularProgress size={20} thickness={5} /> */}\n\n                <ListItemText primary={listOfToggles[i]} />\n                <ListItemSecondaryAction>\n                    <Switch\n                        /**\n                         * gets props with initial menu state\n                         * and turn on the layer on init\n                         */\n                        edge=\"end\"\n                        onChange={handleToggle(listOfToggles[i])}\n                        checked={\n                            props.menuState.includes(listOfToggles[i])\n                                ? true\n                                : false\n                        }\n                    />\n                </ListItemSecondaryAction>\n            </ListItem>\n        );\n        togglesCompsArray.push(thisToggle);\n    }\n\n    const renderABMslider = () => {\n        if (state.checked && state.checked.includes(\"ABM\")) {\n            return <PaperSheet />;\n        } else return null;\n    };\n\n    return (\n        <ThemeProvider theme={theme}>\n            <div className={classes.root}>\n                <Drawer\n                    anchor=\"left\"\n                    open={state.left}\n                    onClose={toggleDrawer(\"left\", false)}\n                >\n                    {sideList(\"left\")}\n                    <List className={classes.root}>\n                        <h2>cityscopeJS</h2>\n                        {togglesCompsArray}\n                    </List>\n                </Drawer>\n            </div>\n\n            <Fab\n                className={classes.menuButton}\n                onClick={toggleDrawer(\"left\", true)}\n            >\n                <MenuIcon />\n            </Fab>\n            <Fab className={classes.editButton} onClick={handleToggle(\"EDIT\")}>\n                {toggleStateArray.includes(\"EDIT\") ? (\n                    <CancelIcon />\n                ) : (\n                    <EditIcon />\n                )}\n            </Fab>\n\n            <Fab\n                className={classes.resetViewButton}\n                onClick={handleToggle(\"RESET_VIEW\")}\n            >\n                {toggleStateArray.includes(\"RESET_VIEW\") ? (\n                    <NavigationIcon />\n                ) : (\n                    <NearMeIcon />\n                )}\n            </Fab>\n\n            {renderABMslider()}\n        </ThemeProvider>\n    );\n}\n\nconst mapStateToProps = state => {\n    return {\n        menuState: state.MENU\n    };\n};\n\nconst mapDispatchToProps = {\n    listenToMenuUI: listenToMenuUI\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Menu);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Menu from \"./menu\";\n\nclass MenuContainer extends Component {\n    render() {\n        if (this.props.cityioData && this.props.cityioData.grid) {\n            return <Menu />;\n        } else {\n            return null;\n        }\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        cityioData: state.CITYIO\n    };\n};\n\nexport default connect(mapStateToProps, null)(MenuContainer);\n","import settings from \"../../settings/settings.json\";\nimport axios from \"axios\";\nvar tzlookup = require(\"tz-lookup\");\n\n/**\n * returns time for table location\n * for the light emlement\n * @param {*} header\n */\n\nexport const setDirLightSettings = header => {\n    // get the hour element of this location\n    let hourAtLatLong = new Date().toLocaleString(\"en-US\", {\n        timeZone: tzlookup(header.spatial.latitude, header.spatial.longitude),\n        hour: \"2-digit\",\n        hour12: false\n    });\n\n    // get the time in greenwich\n    var greenwichDate = new Date();\n    var greenwichHours = greenwichDate.getUTCHours();\n    // calc the offset\n    let timeZoneOffset = greenwichHours + 24 - parseInt(hourAtLatLong);\n    return timeZoneOffset;\n};\n\n/**\n * Description. gets `props` with geojson\n * and procces the interactive area\n */\nexport const _proccessGridData = cityioData => {\n    let types = settings.map.types;\n    const TUIgridData = cityioData.grid;\n\n    const wholeGrid = cityioData.meta_grid;\n    const interactiveGridData = cityioData.interactive_grid_data;\n    // update meta_grid features from cityio\n    if (interactiveGridData) {\n        for (let i = 0; i < wholeGrid.features.length; i++) {\n            wholeGrid.features[i].properties = interactiveGridData[i];\n        }\n    }\n\n    // handles TUI grid data on update\n    const interactiveMapping = cityioData.interactive_grid_mapping;\n    for (let i in interactiveMapping) {\n        // type is the first value in the cell array\n        // the rotation is the 2nd\n        let gridCellType = TUIgridData[i][0];\n        let interactiveCellProps =\n            wholeGrid.features[interactiveMapping[i]].properties;\n        // set up the cell type\n        interactiveCellProps.type = gridCellType;\n\n        // check if not undefined type (no scanning)\n\n        if (TUIgridData[i][0] !== -1) {\n            // get value of cell from settings via its index\n            let cellValueByIndex = Object.values(types)[TUIgridData[i][0]];\n            // cast the cell color\n            interactiveCellProps.color = cellValueByIndex.color;\n            // cast the cell height\n            interactiveCellProps.height = cellValueByIndex.height;\n        } else {\n            console.log(\"... got null type...\");\n        }\n    }\n    const newGrid = JSON.parse(JSON.stringify(wholeGrid));\n    return newGrid;\n};\n\n/**\n * proccess grid data to geojson\n * of lineStrings\n * @param {cityIOdata} data\n * \n \nfeatures  :[\n    {\n        type: \"Feature\",\n        properties: {},\n        geometry: {\n            type: \"Point\",\n            coordinates: [125.6, 10.1]\n        },\n        properties: {\n            name: \"Dinagat Islands\"\n        }\n    }...\n]\n */\n\nexport const _proccesnetworkGeojson = cityioData => {\n    const metaGrid = cityioData.meta_grid.features;\n    const networkGeojson = {\n        type: \"FeatureCollection\",\n        features: []\n    };\n    // update meta_grid features from cityio\n    if (metaGrid) {\n        for (let i = 0; i < metaGrid.length; i++) {\n            const pnttLatLong = metaGrid[i].geometry.coordinates[0][0];\n            let id = i;\n            let props;\n            if (cityioData.interactive_network_data) {\n                props = cityioData.interactive_network_data[id];\n            } else {\n                const noneType = settings.map.netTypes[0];\n                props = {\n                    land_use: \"network\",\n                    netWidth: noneType.width,\n                    color: noneType.color,\n                    id: \"0\"\n                };\n            }\n            const pnt = {\n                type: \"Feature\",\n                properties: props,\n                geometry: {\n                    type: \"Point\",\n                    coordinates: pnttLatLong\n                }\n            };\n            networkGeojson.features.push(pnt);\n        }\n    }\n    return networkGeojson;\n};\n\n/**\n * Data format:\n * [\n *   {text: 'type', coordinates: [-122.466233, 37.684638]},\n *   ...\n * ]\n *\n * Grid data format:\n * features[i].geometry.coordinates[0][0]\n */\nexport const _proccessGridTextData = data => {\n    const meta_grid = data.meta_grid;\n    let textData = [];\n    for (let i = 0; i < meta_grid.features.length; i++) {\n        textData[i] = {\n            text: meta_grid.features[i].properties.height.toString(),\n            coordinates: [\n                meta_grid.features[i].geometry.coordinates[0][0][0],\n                meta_grid.features[i].geometry.coordinates[0][0][1],\n                meta_grid.features[i].properties.height + 10\n            ]\n        };\n    }\n    return textData;\n};\n\n/**\n * Description. gets `props` with geojson\n * and procces the access layer data\n */\nexport const _proccessAccessData = data => {\n    const accessData = data.access;\n    // get colors from settings\n    let coordinates = accessData.features.map(d => d.geometry.coordinates);\n    let values = accessData.features.map(d => d.properties);\n    let heatmap = [];\n    for (let i = 0; i < coordinates.length; i++) {\n        heatmap.push({\n            coordinates: coordinates[i],\n            values: values[i]\n        });\n    }\n    return heatmap;\n};\n\n/**\n * checks if edits are done (toggled off)\n * than returns a redux state\n * with grid edits payload\n */\nexport const _postMapEditsToCityIO = (data, tableName, endPoint) => {\n    let dataProps = [];\n    for (let i = 0; i < data.features.length; i++) {\n        dataProps[i] = data.features[i].properties;\n    }\n\n    axios\n        .post(\n            \"https://cityio.media.mit.edu/api/table/update/\" +\n                tableName +\n                endPoint,\n            dataProps\n        )\n        .then(response => {\n            console.log(response.data);\n        })\n        .catch(error => {\n            console.log(error);\n        });\n};\n\n// _handleCellsHeight(flat) {\n//     let grid = this.state.meta_grid.features;\n\n//     grid.forEach(cell => {\n//         const thisCellProps = cell.properties;\n//         if (flat) {\n//             thisCellProps.old_height = thisCellProps.height;\n//             thisCellProps.flat = true;\n//             thisCellProps.height = 0.1;\n//         } else {\n//             thisCellProps.flat = false;\n//             thisCellProps.height = thisCellProps.old_height;\n//         }\n//     });\n//     // make react think of a new obj: hack\n//     grid = JSON.parse(JSON.stringify(grid));\n//     this.setState({\n//         selectedCellsState: grid\n//     });\n// }\n","export const consoleStyle = [\n    \"background: linear-gradient(#10B500, #0086B5)\",\n    \"border: 3px solid #ffffff\",\n    \"color: white\",\n    \"display: block\",\n    \"text-shadow: 0 1px 0 rgba(0, 0, 0, 0.5)\",\n    \"line-height: 40px\",\n    \"text-align: center\",\n    \"font-weight: bold\"\n].join(\";\");\n","/* global window */\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { listenToMapEvents } from \"../../redux/actions\";\nimport {\n    _proccesnetworkGeojson,\n    _proccessAccessData,\n    _proccessGridData,\n    _postMapEditsToCityIO,\n    _proccessGridTextData,\n    setDirLightSettings\n} from \"./baseMapUtils\";\nimport { StaticMap } from \"react-map-gl\";\nimport DeckGL from \"@deck.gl/react\";\nimport { TripsLayer } from \"@deck.gl/geo-layers\";\nimport \"mapbox-gl/dist/mapbox-gl.css\";\nimport {\n    HeatmapLayer,\n    PathLayer,\n    GeoJsonLayer,\n    TextLayer,\n    ScatterplotLayer\n} from \"deck.gl\";\nimport { LightingEffect, AmbientLight, _SunLight } from \"@deck.gl/core\";\nimport settings from \"../../settings/settings.json\";\nimport { consoleStyle } from \"../../services/consoleStyle\";\nclass Map extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            menu: null,\n            cityioData: null,\n            draggingWhileEditing: false,\n            selectedCellsState: null,\n            selectedNetState: null,\n            time: 0,\n            pickingRadius: 40,\n            viewState: settings.map.initialViewState\n        };\n        this.animationFrame = null;\n        this._onViewStateChange = this._onViewStateChange.bind(this);\n        this.timeZoneOffset = setDirLightSettings(this.props.cityioData.header);\n        this.dirLightSettings = {\n            timestamp: Date.UTC(2019, 7, 1, 11 + this.timeZoneOffset),\n            color: [255, 255, 255],\n            intensity: 1.0,\n            _shadow: true\n        };\n    }\n\n    componentWillUnmount() {\n        if (this.animationFrame) {\n            window.cancelAnimationFrame(this.animationFrame);\n        }\n    }\n\n    componentDidMount() {\n        // fix deck view rotate\n        this._rightClickViewRotate();\n        // setup sun effects\n        this._setupEffects();\n        // zoom map on CS table location\n        this._setViewStateToTableHeader();\n    }\n\n    /**\n     * handels events as they derived from redux props\n     */\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.menu !== prevState.menu) {\n            this.setState({ menu: this.props.menu });\n            // start ainmation/sim/roate\n            this._animate();\n        }\n\n        if (prevState.cityioData !== this.props.cityioData) {\n            console.log(\"%c new cityioData data to render \", consoleStyle);\n            // get cityio data from props\n            const cityioData = this.props.cityioData;\n            this.setState({\n                cityioData: cityioData,\n                meta_grid: _proccessGridData(cityioData),\n                gridTextData: _proccessGridTextData(cityioData),\n                networkGeojson: _proccesnetworkGeojson(cityioData)\n            });\n\n            // ! workaround for preloading access layer data\n            if (this.props.cityioData.access) {\n                this.setState({ access: _proccessAccessData(cityioData) });\n            }\n\n            // FOR NOW FAKE TYPE\n            this._rndType();\n        }\n\n        //    toggle edit mode\n        if (\n            prevProps.menu.includes(\"EDIT\") &&\n            !this.props.menu.includes(\"EDIT\")\n        ) {\n            _postMapEditsToCityIO(\n                this.state.meta_grid,\n                this.props.cityioData.tableName,\n                \"/interactive_grid_data\"\n            );\n\n            _postMapEditsToCityIO(\n                this.state.networkGeojson,\n                this.props.cityioData.tableName,\n                \"/interactive_network_data\"\n            );\n        }\n\n        //    toggle reset view mode\n        if (\n            !prevProps.menu.includes(\"RESET_VIEW\") &&\n            this.props.menu.includes(\"RESET_VIEW\")\n        ) {\n            this._setViewStateToTableHeader();\n        } else if (\n            prevProps.menu.includes(\"RESET_VIEW\") &&\n            !this.props.menu.includes(\"RESET_VIEW\")\n        ) {\n            this.setState({\n                viewState: {\n                    ...this.state.viewState,\n                    pitch: 45\n                }\n            });\n        }\n    }\n\n    _onViewStateChange({ viewState }) {\n        this.setState({ viewState });\n    }\n\n    /**\n     * resets the camera viewport\n     * to cityIO header data\n     * https://github.com/uber/deck.gl/blob/master/test/apps/viewport-transitions-flyTo/src/app.js\n     */\n    _setViewStateToTableHeader() {\n        const header = this.props.cityioData.header;\n        this.setState({\n            viewState: {\n                ...this.state.viewState,\n                longitude: header.spatial.longitude,\n                latitude: header.spatial.latitude,\n                zoom: 14,\n                pitch: 0,\n                bearing: 180 - header.spatial.rotation\n            }\n        });\n    }\n\n    _setupEffects() {\n        const ambientLight = new AmbientLight({\n            color: [255, 255, 255],\n            intensity: 0.85\n        });\n        const dirLight = new _SunLight(this.dirLightSettings);\n        const lightingEffect = new LightingEffect({ ambientLight, dirLight });\n        lightingEffect.shadowColor = [0, 0, 0, 0.5];\n        this._effects = [lightingEffect];\n    }\n\n    _animate() {\n        /**\n         * remove the binded animation when comp updates\n         */\n        window.cancelAnimationFrame(this.animationFrame);\n\n        if (this.props.menu.includes(\"ABM\")) {\n            const {\n                startSimHour,\n                animationSpeed,\n                endSimHour\n            } = settings.map.layers.ABM;\n\n            let t = this.state.time + animationSpeed;\n            if (\n                this.state.time > endSimHour ||\n                this.state.time < startSimHour\n            ) {\n                t = startSimHour;\n            }\n\n            let offset = this.timeZoneOffset * 3600;\n            var date = new Date(\n                (startSimHour + offset + this.state.time) * 1000\n            );\n            this._effects[0].directionalLights[0].timestamp = Date.UTC(\n                date.getFullYear(),\n                date.getMonth(),\n                date.getDay(),\n                date.getHours(),\n                date.getMinutes(),\n                date.getSeconds()\n            );\n\n            this.setState({ time: t });\n        }\n        if (this.props.menu.includes(\"ROTATE\")) {\n            let bearing = this.state.viewState.bearing\n                ? this.state.viewState.bearing\n                : 0;\n            bearing < 360 ? (bearing += 0.05) : (bearing = 0);\n\n            this.setState({\n                viewState: {\n                    ...this.state.viewState,\n                    bearing: bearing\n                }\n            });\n        }\n\n        this.animationFrame = window.requestAnimationFrame(\n            this._animate.bind(this)\n        );\n\n        // stop animation on state\n        if (!this.props.menu.includes(\"ABM\")) {\n            // && this.animationFrame\n            this._effects[0].directionalLights[0].timestamp = this.dirLightSettings.timestamp;\n            return;\n        }\n    }\n\n    /**\n     * Description. fix deck issue\n     * with rotate right botton\n     */\n    _rightClickViewRotate() {\n        document\n            .getElementById(\"deckgl-wrapper\")\n            .addEventListener(\"contextmenu\", evt => evt.preventDefault());\n    }\n\n    /**\n     * Description. uses deck api to\n     * collect objects in a region\n     * @argument{object} e  picking event\n     */\n    _mulipleObjPicked = e => {\n        const dim = this.state.pickingRadius;\n        const x = e.x - dim / 2;\n        const y = e.y - dim / 2;\n        let mulipleObj = this.deckGL.pickObjects({\n            x: x,\n            y: y,\n            width: dim,\n            height: dim\n        });\n        return mulipleObj;\n    };\n\n    /**\n     * Description. allow only to pick cells that are\n     *  not of CityScope TUI & that are interactable\n     * so to not overlap TUI activity\n     */\n    _handleCellsSelection = e => {\n        const randomType = this.state.randomType;\n        const multiSelectedObj = this._mulipleObjPicked(e);\n        multiSelectedObj.forEach(selected => {\n            const thisCellProps = selected.object.properties;\n            if (\n                thisCellProps.land_use !== \"None\" &&\n                !thisCellProps.interactive\n            ) {\n                thisCellProps.old_height = thisCellProps.height;\n                thisCellProps.old_color = thisCellProps.color;\n                thisCellProps.color = randomType.color;\n                thisCellProps.height = randomType.height;\n            }\n        });\n        this.setState({\n            selectedCellsState: multiSelectedObj\n        });\n    };\n\n    _handleCellsHover = e => {\n        const randomType = this.state.randomType;\n\n        if (e.object && e.object.properties) {\n            const thisCellProps = e.object.properties;\n            if (\n                thisCellProps.land_use !== \"None\" &&\n                !thisCellProps.interactive\n            ) {\n                thisCellProps.old_color = thisCellProps.color;\n                thisCellProps.color = randomType.color;\n                this.setState({\n                    selectedCellsState: e.object\n                });\n                thisCellProps.color = thisCellProps.old_color;\n                this.setState({\n                    selectedCellsState: e.object\n                });\n            }\n        }\n    };\n\n    /**\n     * Description. allow only to pick net edges\n     */\n    _handleNetSelection = e => {\n        const rndNetType = this.state.randomNetType;\n        const multiEdgeSelected = this._mulipleObjPicked(e);\n        multiEdgeSelected.forEach(edge => {\n            const thisEdgeProps = edge.object.properties;\n            // network edges selected\n            if (thisEdgeProps.land_use === \"network\") {\n                thisEdgeProps.old_color = thisEdgeProps.color;\n                thisEdgeProps.color = rndNetType.color;\n                thisEdgeProps.netWidth = rndNetType.width;\n            }\n        });\n        this.setState({\n            selectedNetState: multiEdgeSelected\n        });\n    };\n\n    /**\n     * Description.\n     * draw target area around mouse\n     */\n    _renderSelectionTarget = () => {\n        if (this.props.menu.includes(\"EDIT\") && this.state.mousePos) {\n            const targetMetaData =\n                !this.props.menu.includes(\"GRID\") &&\n                this.props.menu.includes(\"NETWORK\")\n                    ? this.state.randomNetType\n                    : this.state.randomType;\n            const rc = targetMetaData.color;\n            const color = \"rgb(\" + rc[0] + \",\" + rc[1] + \",\" + rc[2] + \")\";\n            const mousePos = this.state.mousePos;\n            const divSize = this.state.pickingRadius;\n\n            let mouseX = mousePos.clientX - divSize / 2;\n            let mouseY = mousePos.clientY - divSize / 2;\n\n            return (\n                <div\n                    style={{\n                        border: \"2px solid\",\n                        backgroundColor: this.state.mouseDown\n                            ? \"rgba(\" +\n                              rc[0] +\n                              \",\" +\n                              rc[1] +\n                              \",\" +\n                              rc[2] +\n                              \",0.6)\"\n                            : \"rgba(0,0,0,0)\",\n                        borderColor: color,\n                        color: color,\n                        borderRadius: \"15%\",\n                        position: \"fixed\",\n                        zIndex: 1,\n                        pointerEvents: \"none\",\n                        width: divSize,\n                        height: divSize,\n                        left: mouseX,\n                        top: mouseY\n                    }}\n                >\n                    <div\n                        style={{\n                            position: \"relative\",\n                            left: divSize + 10,\n                            fontSize: \"1vw\"\n                        }}\n                    >\n                        {targetMetaData.name}\n                    </div>\n                </div>\n            );\n        }\n    };\n\n    /**\n     * Description.\n     * Temp def. for color selection\n     */\n    _rndType = () => {\n        var keys = Object.keys(settings.map.types);\n        let randomType =\n            settings.map.types[keys[(keys.length * Math.random()) << 0]];\n        this.setState({ randomType: randomType });\n        // net type !TEMP\n        var netKeys = Object.keys(settings.map.netTypes);\n        let randomNetType =\n            settings.map.netTypes[\n                netKeys[(netKeys.length * Math.random()) << 0]\n            ];\n        this.setState({ randomNetType: randomNetType });\n    };\n\n    _handleKeyUp = () => {\n        this.setState({ keyDownState: null });\n    };\n\n    _handleKeyDown = e => {\n        // avoid common clicks\n        this.setState({ keyDownState: e.nativeEvent.key });\n        // compute rnd color for now\n        if (e.nativeEvent.key === \" \") {\n            this._rndType();\n        } else if (\n            e.nativeEvent.key === \"=\" &&\n            this.state.pickingRadius < 100\n        ) {\n            this.setState({ pickingRadius: this.state.pickingRadius + 5 });\n        } else if (e.nativeEvent.key === \"-\" && this.state.pickingRadius > 0) {\n            this.setState({ pickingRadius: this.state.pickingRadius - 5 });\n        }\n    };\n\n    /**\n     * renders deck gl layers\n     */\n    _renderLayers() {\n        const cityioData = this.props.cityioData;\n        let layers = [];\n\n        if (this.props.menu.includes(\"TEXT\")) {\n            layers.push(\n                new TextLayer({\n                    id: \"gridText-layer\",\n                    data: this.state.gridTextData,\n                    getText: d => d.text,\n                    getPosition: d => d.coordinates,\n                    getColor: [255, 255, 255],\n                    getSize: 16\n                })\n            );\n        }\n\n        if (\n            this.props.menu.includes(\"NETWORK\") &&\n            this.state.networkGeojson &&\n            this.state.networkGeojson.features\n        ) {\n            layers.push(\n                new ScatterplotLayer({\n                    id: \"NETWORK\",\n                    data: this.state.networkGeojson.features,\n                    pickable: true,\n                    opacity: 0.8,\n                    stroked: false,\n                    filled: true,\n                    radiusScale: 1,\n                    radiusMinPixels: 1,\n                    radiusMaxPixels: 20,\n                    getPosition: d => d.geometry.coordinates,\n                    getFillColor: d => d.properties.color,\n                    getRadius: d => d.properties.netWidth,\n                    updateTriggers: {\n                        getFillColor: this.state.selectedNetState,\n                        getRadius: this.state.selectedNetState\n                    },\n                    transitions: {\n                        getFillColor: 500,\n                        getRadius: 500\n                    },\n                    onClick: event => {\n                        if (\n                            this.props.menu.includes(\"EDIT\") &&\n                            this.state.keyDownState !== \"Shift\"\n                        )\n                            this._handleNetSelection(event);\n                    },\n                    onDrag: event => {\n                        if (\n                            this.props.menu.includes(\"EDIT\") &&\n                            this.state.keyDownState !== \"Shift\"\n                        )\n                            this._handleNetSelection(event);\n                    },\n                    onDragStart: () => {\n                        if (\n                            this.props.menu.includes(\"EDIT\") &&\n                            this.state.keyDownState !== \"Shift\"\n                        ) {\n                            this.setState({ draggingWhileEditing: true });\n                        }\n                    },\n                    onDragEnd: () => {\n                        this.setState({ draggingWhileEditing: false });\n                    }\n                })\n            );\n        }\n\n        if (this.props.menu.includes(\"GRID\")) {\n            layers.push(\n                new GeoJsonLayer({\n                    id: \"GRID\",\n                    data: this.state.meta_grid,\n                    visible: this.props.menu.includes(\"GRID\") ? true : false,\n                    pickable: true,\n                    extruded: true,\n                    lineWidthScale: 1,\n                    lineWidthMinPixels: 2,\n                    getElevation: d => d.properties.height,\n                    getFillColor: d =>\n                        d.properties.type !== undefined\n                            ? d.properties.color\n                            : d.properties.color\n                            ? d.properties.color\n                            : d.properties.land_use !== \"None\"\n                            ? settings.map.types[1].color\n                            : settings.map.types[0].color,\n                    onClick: event => {\n                        if (\n                            this.props.menu.includes(\"EDIT\") &&\n                            this.state.keyDownState !== \"Shift\"\n                        )\n                            this._handleCellsSelection(event);\n                    },\n                    onHover: event => {\n                        if (\n                            this.props.menu.includes(\"EDIT\") &&\n                            this.state.keyDownState !== \"Shift\"\n                        )\n                            this._handleCellsHover(event);\n                    },\n                    onDrag: event => {\n                        if (\n                            this.props.menu.includes(\"EDIT\") &&\n                            this.state.keyDownState !== \"Shift\"\n                        )\n                            this._handleCellsSelection(event);\n                    },\n                    onDragStart: () => {\n                        if (\n                            this.props.menu.includes(\"EDIT\") &&\n                            this.state.keyDownState !== \"Shift\"\n                        ) {\n                            this.setState({ draggingWhileEditing: true });\n                        }\n                    },\n                    onDragEnd: () => {\n                        this.setState({ draggingWhileEditing: false });\n                    },\n                    updateTriggers: {\n                        getFillColor: this.state.selectedCellsState,\n                        getElevation: this.state.selectedCellsState\n                    },\n                    transitions: {\n                        getFillColor: 500,\n                        getElevation: 500\n                    }\n                })\n            );\n        }\n\n        if (this.props.menu.includes(\"ABM\")) {\n            layers.push(\n                new TripsLayer({\n                    id: \"ABM\",\n                    visible: this.props.menu.includes(\"ABM\") ? true : false,\n                    data: cityioData.ABM,\n                    // getPath: d => d.path,\n                    getPath: d => {\n                        for (let i in d.path) {\n                            d.path[i][2] = 20;\n                        }\n                        return d.path;\n                    },\n\n                    getTimestamps: d => d.timestamps,\n                    getColor: d => {\n                        //switch between modes or types of users\n                        switch (d.mode[1]) {\n                            case 0:\n                                return [255, 0, 0];\n                            case 1:\n                                return [0, 0, 255];\n                            case 2:\n                                return [0, 255, 0];\n                            default:\n                                return [0, 0, 0];\n                        }\n                    },\n                    getWidth: 2,\n                    opacity: 0.8,\n                    rounded: true,\n                    trailLength: 500,\n                    currentTime: this.state.time\n                })\n            );\n        }\n\n        if (this.props.menu.includes(\"PATHS\")) {\n            layers.push(\n                new PathLayer({\n                    id: \"PATHS\",\n                    visible: this.props.menu.includes(\"PATHS\") ? true : false,\n                    _shadow: false,\n                    data: cityioData.ABM,\n                    getPath: d => {\n                        const noisePath =\n                            Math.random() < 0.5\n                                ? Math.random() * 0.00005\n                                : Math.random() * -0.00005;\n                        for (let i in d.path) {\n                            d.path[i][0] = d.path[i][0] + noisePath;\n                            d.path[i][1] = d.path[i][1] + noisePath;\n                            d.path[i][2] = 10;\n                        }\n                        return d.path;\n                    },\n                    getColor: d => {\n                        switch (d.mode[1]) {\n                            case 0:\n                                return [255, 0, 0];\n                            case 1:\n                                return [0, 0, 255];\n                            case 2:\n                                return [0, 255, 0];\n                            default:\n                                return [0, 0, 0];\n                        }\n                    },\n                    opacity: 0.2,\n                    getWidth: 1\n                })\n            );\n        }\n\n        if (this.props.menu.includes(\"ACCESS\")) {\n            layers.push(\n                new HeatmapLayer({\n                    id: \"ACCESS\",\n                    visible: this.props.menu.includes(\"ACCESS\") ? true : false,\n                    colorRange: settings.map.layers.heatmap.colors,\n                    radiusPixels: 200,\n                    opacity: 0.25,\n                    data: this.state.access,\n                    getPosition: d => d.coordinates,\n                    getWeight: d => d.values.housing\n                })\n            );\n        }\n        return layers;\n    }\n\n    render() {\n        return (\n            <div\n                className=\"baseMap\"\n                onKeyDown={this._handleKeyDown}\n                onKeyUp={this._handleKeyUp}\n                onMouseMove={e =>\n                    this.setState({\n                        mousePos: e.nativeEvent\n                    })\n                }\n                onMouseUp={() =>\n                    this.setState({\n                        mouseDown: false\n                    })\n                }\n                onMouseDown={() =>\n                    this.setState({\n                        mouseDown: true\n                    })\n                }\n            >\n                {/* renders the slection box div */}\n                <div>{this._renderSelectionTarget()}</div>\n\n                <DeckGL\n                    // sets the cursor on paint\n                    getCursor={() =>\n                        this.props.menu.includes(\"EDIT\") ? \"none\" : \"all-scroll\"\n                    }\n                    ref={ref => {\n                        // save a reference to the Deck instance\n                        this.deckGL = ref && ref.deck;\n                    }}\n                    viewState={this.state.viewState}\n                    onViewStateChange={this._onViewStateChange}\n                    layers={this._renderLayers()}\n                    effects={this._effects}\n                    controller={{\n                        touchZoom: true,\n                        touchRotate: true,\n                        dragPan: !this.state.draggingWhileEditing,\n                        dragRotate: !this.state.draggingWhileEditing,\n                        keyboard: false\n                    }}\n                >\n                    <StaticMap\n                        asyncRender={true}\n                        dragRotate={true}\n                        reuseMaps={true}\n                        mapboxApiAccessToken={\n                            process.env.REACT_APP_MAPBOX_TOKEN\n                        }\n                        mapStyle={settings.map.mapStyle.blue}\n                        preventStyleDiffing={true}\n                    />\n                </DeckGL>\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = {\n    listenToMapEvents: listenToMapEvents\n};\n\nexport default connect(null, mapDispatchToProps)(Map);\n","import { Matrix3d, RectPoints, Vector } from \"./layer\";\nconst { solve } = require(\"numeric\");\n\nexport const round = (num: number, precision: number) => {\n    var factor = Math.pow(10, precision);\n    var tempNumber = num * factor;\n    var roundedTempNumber = Math.round(tempNumber);\n    return roundedTempNumber / factor;\n};\n\n// tslint:disable-next-line:no-any\nexport const range = (num: number) =>\n    (Array as any)(num)\n        .fill()\n        .map((_: any, i: any) => i * i);\n\nexport const transformPointsToMatrix = (\n    sourcePoints: RectPoints,\n    targetPoints: RectPoints\n): Matrix3d => {\n    const a: number[][] = [];\n    const b: number[] = [];\n\n    for (let i = 0, n = sourcePoints.length; i < n; ++i) {\n        const [fromX, fromY] = sourcePoints[i];\n        const [toX, toY] = targetPoints[i];\n\n        a.push(\n            [fromX, fromY, 1, 0, 0, 0, -fromX * toX, -fromY * toX],\n            [0, 0, 0, fromX, fromY, 1, -fromX * toY, -fromY * toY]\n        );\n\n        b.push(toX, toY);\n    }\n\n    const h = solve(a, b, true);\n\n    return [\n        h[0],\n        h[3],\n        0,\n        h[6],\n        h[1],\n        h[4],\n        0,\n        h[7],\n        0,\n        0,\n        1,\n        0,\n        h[2],\n        h[5],\n        0,\n        1\n    ].map(num => round(num, 10)) as Matrix3d;\n};\n\nexport const matrixToTransform = (matrix: Matrix3d) =>\n    `matrix3d(${matrix.join(\", \")})`;\n\nexport const vectorToTransform = (vector: Vector) =>\n    `translate(${vector[0]}px, ${vector[1]}px)`;\n","import * as React from \"react\";\nimport { Anchor, Vector } from \"./layer\";\nimport { vectorToTransform } from \"./util\";\n\nconst anchorSize = 30;\nconst halfAnchor = anchorSize / 2;\n\nconst styles = {\n    container: {\n        width: anchorSize,\n        height: anchorSize,\n        borderRadius: \"50%\",\n        position: \"absolute\" as \"absolute\",\n        border: \"4px solid white\",\n        cursor: \"move\"\n    },\n    \"top-left\": {\n        left: -halfAnchor,\n        top: -halfAnchor\n    },\n    \"bottom-left\": {\n        left: -halfAnchor,\n        bottom: -halfAnchor\n    },\n    \"top-right\": {\n        top: -halfAnchor,\n        right: -halfAnchor\n    },\n    \"bottom-right\": {\n        bottom: -halfAnchor,\n        right: -halfAnchor\n    }\n};\n\nexport interface Props {\n    position: Anchor;\n    onMouseEnter?: (position: Anchor) => void;\n    // tslint:disable-next-line:no-any\n    onMouseDown: (evt: any, position: Anchor) => void;\n    onMouseUp: (position: Anchor) => void;\n    translation: Vector;\n    style?: React.CSSProperties;\n    className?: string;\n}\n\nexport const AnchorComponent: React.StatelessComponent<Props> = ({\n    position,\n    translation,\n    onMouseEnter,\n    onMouseDown,\n    onMouseUp,\n    className = \"\",\n    style = {}\n}) => (\n    <div\n        onMouseEnter={() => onMouseEnter && onMouseEnter(position)}\n        onMouseDown={evt => onMouseDown(evt, position)}\n        onMouseUp={() => onMouseUp(position)}\n        className={className}\n        style={{\n            ...styles.container,\n            ...styles[position],\n            ...style,\n            transform: vectorToTransform(translation)\n        }}\n    />\n);\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nconst useStyles = makeStyles(theme => ({\n    button: {\n        margin: theme.spacing(1),\n        position: \"fixed\",\n        top: \"50vh\",\n        zIndex: 1000\n    }\n}));\n\nexport default function DeleteLocalStorage() {\n    const classes = useStyles();\n\n    return (\n        <Grid container alignItems=\"center\" justify=\"center\">\n            <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                className={classes.button}\n                startIcon={<DeleteIcon />}\n            >\n                Reset Projection Mapping\n            </Button>\n        </Grid>\n    );\n}\n","import * as React from \"react\";\nimport { AnchorComponent } from \"./anchor\";\nimport {\n    matrixToTransform,\n    transformPointsToMatrix,\n    vectorToTransform\n} from \"./util\";\n\nimport DeleteLocalStorage from \"./deleteLocalStorage\";\n\n// Component interfaces\nexport interface Props {\n    style?: React.CSSProperties;\n    className?: string;\n    isEditMode?: boolean;\n    x?: number;\n    y?: number;\n    anchorStyle?: React.CSSProperties;\n    anchorClassName?: string;\n}\n\nexport interface Context {\n    isEditMode: boolean;\n}\n\nexport interface State {\n    matrix: Matrix3d;\n    translateDelta: { [key: string]: Vector };\n    sourcePoints?: RectPoints;\n    transformOrigin: Vector;\n    containerTranslate: Vector;\n}\n\nconst styles = {\n    container: {\n        position: \"relative\" as \"relative\"\n    }\n};\n\n// Sorted\nexport type Anchor = \"top-left\" | \"top-right\" | \"bottom-right\" | \"bottom-left\";\nconst anchors: Anchor[] = [\n    \"top-left\",\n    \"top-right\",\n    \"bottom-right\",\n    \"bottom-left\"\n];\n\n// 4x4 matrix\nexport type Matrix3d = [\n    number,\n    number,\n    number,\n    number,\n    number,\n    number,\n    number,\n    number,\n    number,\n    number,\n    number,\n    number,\n    number,\n    number,\n    number,\n    number\n];\n\n// top-left, top-right, bottom-right, bottom-left\nexport type RectPoints = [Vector, Vector, Vector, Vector];\n\nexport type Vector = [number, number]; // [x, y]\n\nconst defaultMatrix: Matrix3d = [\n    1,\n    0,\n    0,\n    0,\n    0,\n    1,\n    0,\n    0,\n    0,\n    0,\n    1,\n    0,\n    0,\n    0,\n    0,\n    1 // second and third for x and y position of element\n];\n\nconst _setDeltaVal = () => {\n    let deltaInitVals: any = {};\n    anchors.forEach(e => {\n        deltaInitVals[e] = [0, 0];\n    });\n    return deltaInitVals;\n};\n\nexport class Layer extends React.Component<Props, State> {\n    container: HTMLElement | null;\n    layerTranslateDelta: Vector | undefined;\n    anchorTranslateDelta: Vector | undefined;\n    isAnchorDragging = false;\n    targetPoints: RectPoints;\n    anchorMoving: Anchor | undefined;\n    state: State = {\n        matrix: defaultMatrix,\n        translateDelta: _setDeltaVal(),\n        sourcePoints: undefined,\n        transformOrigin: [0, 0],\n        containerTranslate: [this.props.x || 0, this.props.y || 0]\n    };\n\n    componentDidMount() {\n        console.log(\"starting projMap...\");\n        window.addEventListener(\"mousemove\", this.onAnchorMouseMove);\n        window.addEventListener(\"mousemove\", this.onMouseMove);\n        if (this.container) {\n            const { width, height } = this.container.getBoundingClientRect();\n            const sourcePoints = [\n                [0, 0],\n                [width, 0],\n                [width, height],\n                [0, height]\n            ] as RectPoints;\n\n            this.targetPoints = [...sourcePoints] as RectPoints;\n            this.setState({ sourcePoints });\n        }\n    }\n    componentDidUpdate(prevProps: any, prevState: State) {\n        // if entered keystone mode\n        if (!prevProps.isEditMode && this.props.isEditMode) {\n            // if found prev. keystone data\n            if (localStorage.getItem(\"projMap\")) {\n                console.log(\"loading prev. projMap...\");\n                let ls: any = localStorage.getItem(\"projMap\");\n                this.setState(JSON.parse(ls));\n            }\n            // if left keystone mode\n        } else if (prevProps.isEditMode && !this.props.isEditMode) {\n            console.log(\"saving edited projMap...\");\n            // save whatever keystone was in state\n            localStorage.setItem(\"projMap\", JSON.stringify(prevState));\n        }\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"mousemove\", this.onAnchorMouseMove);\n        window.removeEventListener(\"mousemove\", this.onMouseMove);\n    }\n\n    onAnchorMouseDown = (evt: any, position: any) => {\n        evt.stopPropagation();\n        this.anchorTranslateDelta = [\n            evt.pageX - this.state.translateDelta[position][0],\n            evt.pageY - this.state.translateDelta[position][1]\n        ];\n\n        this.anchorMoving = position;\n    };\n\n    onAnchorMouseMove = (evt: any) => {\n        if (\n            !this.anchorTranslateDelta ||\n            !this.state.sourcePoints ||\n            !this.anchorMoving\n        ) {\n            return;\n        }\n        evt.preventDefault();\n        evt.stopPropagation();\n        const vectorIndexToModify = anchors.indexOf(this.anchorMoving);\n\n        const deltaX = evt.pageX - this.anchorTranslateDelta[0];\n        const deltaY = evt.pageY - this.anchorTranslateDelta[1];\n\n        this.targetPoints[vectorIndexToModify] = [\n            this.state.sourcePoints[vectorIndexToModify][0] + deltaX,\n            this.state.sourcePoints[vectorIndexToModify][1] + deltaY\n        ];\n\n        this.setState({\n            matrix: transformPointsToMatrix(\n                this.state.sourcePoints,\n                this.targetPoints!\n            ),\n            translateDelta: {\n                ...this.state.translateDelta,\n                [this.anchorMoving]: [deltaX, deltaY]\n            }\n        });\n    };\n\n    onAnchorMouseUp = (position: any) => {\n        this.anchorTranslateDelta = undefined;\n        this.anchorMoving = undefined;\n    };\n\n    onMouseUp = () => {\n        this.layerTranslateDelta = undefined;\n    };\n\n    onMouseMove = (evt: any) => {\n        if (!this.layerTranslateDelta || !this.props.isEditMode) {\n            return;\n        }\n\n        const newVector: Vector = [\n            evt.pageX - this.layerTranslateDelta[0],\n            evt.pageY - this.layerTranslateDelta[1]\n        ];\n\n        this.setState({\n            containerTranslate: newVector\n        });\n    };\n\n    onMouseDown = (evt: any) => {\n        const { containerTranslate } = this.state;\n        this.layerTranslateDelta = [\n            evt.pageX - containerTranslate[0],\n            evt.pageY - containerTranslate[1]\n        ];\n    };\n\n    _clearLocalStraoge = () => {\n        if (localStorage.getItem(\"projMap\")) {\n            localStorage.removeItem(\"projMap\");\n        }\n        window.location.reload();\n    };\n\n    render() {\n        const {\n            style,\n            isEditMode,\n            className,\n            anchorStyle,\n            anchorClassName\n        } = this.props;\n        const {\n            translateDelta,\n            matrix,\n            containerTranslate,\n            transformOrigin\n        } = this.state;\n\n        return (\n            <React.Fragment>\n                {isEditMode && (\n                    <div onClick={() => this._clearLocalStraoge()}>\n                        <DeleteLocalStorage />\n                    </div>\n                )}\n\n                <div\n                    onMouseDown={this.onMouseDown}\n                    onMouseUp={this.onMouseUp}\n                    style={{\n                        cursor: isEditMode ? \"all-scroll\" : \"inherit\",\n                        position: \"relative\",\n                        display: \"inline-block\",\n                        transform: vectorToTransform(containerTranslate)\n                    }}\n                >\n                    <div\n                        ref={ref => {\n                            this.container = ref;\n                        }}\n                        style={{\n                            ...styles.container,\n                            ...style,\n                            pointerEvents: isEditMode ? \"none\" : \"all\",\n                            transform: matrixToTransform(matrix),\n                            transformOrigin: `${transformOrigin[0]}px ${transformOrigin[1]}px 0px`\n                        }}\n                        className={className}\n                    >\n                        {this.props.children}\n                    </div>\n                    {isEditMode && (\n                        <div>\n                            {anchors.map((anchor, index) => (\n                                <AnchorComponent\n                                    style={anchorStyle}\n                                    className={anchorClassName}\n                                    key={anchor}\n                                    translation={translateDelta[anchor]}\n                                    position={anchor}\n                                    onMouseDown={this.onAnchorMouseDown}\n                                    onMouseUp={this.onAnchorMouseUp}\n                                />\n                            ))}\n                        </div>\n                    )}\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n","import React, { Component } from \"react\";\nimport MAP from \"./baseMap\";\nimport { connect } from \"react-redux\";\nimport { Layer } from \"../prjMap/layer\";\n\nclass MapContainer extends Component {\n    _checkKeystone = () => {\n        return this.props.menu.includes(\"KS\") ? true : false;\n    };\n\n    render() {\n        if (\n            this.props &&\n            this.props.cityioData &&\n            this.props.cityioData.header\n        ) {\n            return (\n                <div\n                    style={{\n                        background: \"black\",\n                        height: \"100vh\",\n                        width: \"100vw\",\n                        maxWidth: \"100%\",\n                        overflow: \"hidden\"\n                    }}\n                >\n                    <Layer\n                        className=\"mapLayer\"\n                        style={{\n                            height: \"100vh\",\n                            width: \"100vw\"\n                        }}\n                        isEditMode={this._checkKeystone()}\n                    >\n                        <MAP\n                            cityioData={this.props.cityioData}\n                            menu={this.props.menu}\n                        />\n                    </Layer>\n                </div>\n            );\n        } else {\n            return null;\n        }\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        cityioData: state.CITYIO,\n        menu: state.MENU\n    };\n};\n\nexport default connect(mapStateToProps, null)(MapContainer);\n","import React, { Component } from \"react\";\nimport { CircularGridLines, RadarChart } from \"react-vis\";\nimport settings from \"../../../settings/settings.json\";\nimport \"../../../../node_modules/react-vis/dist/style.css\";\nimport \"./Radar.css\";\n\nclass Radar extends Component {\n    constructor(props) {\n        super(props);\n        this.domain = settings.radar.domain;\n        this.colorRange = settings.radar.colorRange;\n        this.state = {\n            cityioData: {},\n            radarData: []\n        };\n\n        this.radarSize = 700;\n    }\n\n    generateData() {\n        let data = {};\n        let dataStatic = {};\n        for (let i in this.domain) {\n            // b/s data for now\n            data[this.domain[i].name] = this.props.cityioData.grid[i][0] / 10;\n            // compared with other b/s data\n            dataStatic[this.domain[i].name] = i / this.domain.length;\n        }\n        this.setState({ radarData: [data, dataStatic] });\n    }\n\n    componentDidMount() {\n        console.log(\">> init radar\");\n\n        this.generateData();\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevState.cityioData !== this.props.cityioData) {\n            this.setState({ cityioData: this.props.cityioData });\n            console.log(\"new radar data..\");\n            this.generateData();\n        }\n    }\n\n    render() {\n        return (\n            <RadarChart\n                className=\"Radar blur\"\n                animation\n                data={this.state.radarData}\n                domains={this.domain}\n                colorRange={this.colorRange}\n                style={{\n                    polygons: {\n                        fillOpacity: 0.2,\n                        strokeWidth: 2\n                    },\n                    axes: {\n                        text: {\n                            opacity: 0,\n                            fontWeight: 700,\n                            fill: \"white\"\n                        },\n                        strokeWidth: 0\n                    },\n                    labels: {\n                        textAnchor: \"middle\",\n                        fontSize: 12,\n                        fontWeight: \"600\",\n                        fill: \"white\"\n                    }\n                }}\n                margin={{\n                    left: this.radarSize / 6,\n                    top: this.radarSize / 6,\n                    bottom: this.radarSize / 6,\n                    right: this.radarSize / 6\n                }}\n                width={this.radarSize}\n                height={this.radarSize}\n            >\n                <CircularGridLines\n                    style={{\n                        fill: \"white\",\n                        fillOpacity: 0.1,\n                        backgroundColor: \"#fff\",\n                        opacity: 0.5,\n                        stroke: \"white\",\n                        width: 0.1\n                    }}\n                    tickValues={[...new Array(11)].map((v, i) => i / 10 - 1)}\n                />\n            </RadarChart>\n        );\n    }\n}\n\nexport default Radar;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Radar from \"./Radar/Radar\";\n\nclass VisContainer extends Component {\n    render() {\n        if (\n            this.props.menu &&\n            this.props.menu.includes(\"RADAR\") &&\n            this.props.cityioData &&\n            this.props.cityioData.grid\n        ) {\n            return <Radar cityioData={this.props.cityioData} />;\n        } else {\n            return null;\n        }\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        cityioData: state.CITYIO,\n        menu: state.MENU\n    };\n};\n\nexport default connect(mapStateToProps, null)(VisContainer);\n","import { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport configureStore from \"./redux/store\";\nimport CityIO from \"./services/cityIO\";\nimport Docs from \"./docs/docs\";\nimport MenuContainer from \"./components/menu/menuContainer\";\nimport MapContainer from \"./components/baseMap/baseMapContainer\";\nimport VisContainer from \"./components/vis/visContainer\";\nimport React, { Component } from \"react\";\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nconst store = configureStore();\n\nconst MapRoute = () => {\n    const tableName = window.location.search.substring(1);\n    if (tableName !== \"\") {\n        console.log(tableName);\n\n        return (\n            <Provider store={store}>\n                <MapContainer />\n                <CityIO tableName={tableName} />\n                <VisContainer />\n                <MenuContainer />\n            </Provider>\n        );\n    }\n    return <Docs doc=\"home\" />;\n};\n\nconst DocsRoute = () => {\n    return (\n        <React.Fragment>\n            <Docs doc=\"arch\" />\n            <Docs doc=\"schema\" />\n        </React.Fragment>\n    );\n};\n\nclass App extends Component {\n    render() {\n        return (\n            <Router>\n                <Switch>\n                    <Route path=\"/docs\">\n                        <DocsRoute />;\n                    </Route>\n                    <Route path=\"/\">\n                        <MapRoute />\n                    </Route>\n                </Switch>\n            </Router>\n        );\n    }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst root = document.getElementById(\"root\");\nconst render = () => {\n    return ReactDOM.render(<App />, root);\n};\n\nrender(App);\n\nif (module.hot) {\n    module.hot.accept(\"./App\", () => {\n        const NextApp = require(\"./App\").default;\n        render(NextApp);\n    });\n}\n"],"sourceRoot":""}